{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/user/%5Busername%5D/ProfileClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/user/[username]/ProfileClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/user/[username]/ProfileClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/user/%5Busername%5D/ProfileClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/user/[username]/ProfileClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/user/[username]/ProfileClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/user/%5Busername%5D/page.tsx"],"sourcesContent":["import { Metadata } from 'next';\nimport ProfileClient from './ProfileClient';\n\n// Express API base URL\nconst EXPRESS_URL = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n\n// Generate metadata for SEO\nexport async function generateMetadata({ params }: { params: Promise<{ username: string }> }): Promise<Metadata> {\n  const { username } = await params;\n  try {\n    const res = await fetch(`${EXPRESS_URL}/api/user/${username}/profile`, { cache: 'no-store' });\n    if (!res.ok) {\n      return {\n        title: 'User Not Found | YoForex Community',\n      };\n    }\n\n    const profileData = await res.json();\n    const user = profileData?.user;\n    \n    if (!user) {\n      return {\n        title: 'User Not Found | YoForex Community',\n      };\n    }\n    \n    return {\n      title: `${user.username}'s Profile | YoForex Community`,\n      description: `View ${user.username}'s profile, badges, contributions, and reputation on YoForex`,\n      keywords: `forex trader, ${user.username}, MT4, MT5, expert advisor`,\n      openGraph: {\n        title: `${user.username}'s Profile`,\n        description: `View ${user.username}'s profile, badges, contributions, and reputation on YoForex`,\n        type: 'profile',\n      },\n      twitter: {\n        card: 'summary',\n        title: `${user.username}'s Profile`,\n        description: `View ${user.username}'s profile, badges, contributions, and reputation on YoForex`,\n      },\n    };\n  } catch (error) {\n    return {\n      title: 'User Not Found | YoForex Community',\n    };\n  }\n}\n\n// Main page component (Server Component)\nexport default async function UserProfilePage({ params }: { params: Promise<{ username: string }> }) {\n  const { username } = await params;\n  \n  // Fetch profile data from the comprehensive profile endpoint\n  let profileData = null;\n  try {\n    const profileRes = await fetch(`${EXPRESS_URL}/api/user/${username}/profile`, { \n      cache: 'no-store',\n    });\n    if (profileRes.ok) {\n      profileData = await profileRes.json();\n    }\n  } catch (error) {\n    // Swallow error - ProfileClient will show custom error card\n    profileData = null;\n  }\n\n  // Pass profile data to Client Component\n  return (\n    <ProfileClient\n      username={username}\n      initialData={profileData}\n    />\n  );\n}\n\n// Enable dynamic rendering with no caching\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 0;\n"],"names":[],"mappings":";;;;;;;;;;;AACA;;;AAEA,uBAAuB;AACvB,MAAM,cAAc,6DAAuC;AAGpD,eAAe,iBAAiB,EAAE,MAAM,EAA6C;IAC1F,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM;IAC3B,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,GAAG,YAAY,UAAU,EAAE,SAAS,QAAQ,CAAC,EAAE;YAAE,OAAO;QAAW;QAC3F,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,OAAO;gBACL,OAAO;YACT;QACF;QAEA,MAAM,cAAc,MAAM,IAAI,IAAI;QAClC,MAAM,OAAO,aAAa;QAE1B,IAAI,CAAC,MAAM;YACT,OAAO;gBACL,OAAO;YACT;QACF;QAEA,OAAO;YACL,OAAO,GAAG,KAAK,QAAQ,CAAC,8BAA8B,CAAC;YACvD,aAAa,CAAC,KAAK,EAAE,KAAK,QAAQ,CAAC,4DAA4D,CAAC;YAChG,UAAU,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,0BAA0B,CAAC;YACpE,WAAW;gBACT,OAAO,GAAG,KAAK,QAAQ,CAAC,UAAU,CAAC;gBACnC,aAAa,CAAC,KAAK,EAAE,KAAK,QAAQ,CAAC,4DAA4D,CAAC;gBAChG,MAAM;YACR;YACA,SAAS;gBACP,MAAM;gBACN,OAAO,GAAG,KAAK,QAAQ,CAAC,UAAU,CAAC;gBACnC,aAAa,CAAC,KAAK,EAAE,KAAK,QAAQ,CAAC,4DAA4D,CAAC;YAClG;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,OAAO;QACT;IACF;AACF;AAGe,eAAe,gBAAgB,EAAE,MAAM,EAA6C;IACjG,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM;IAE3B,6DAA6D;IAC7D,IAAI,cAAc;IAClB,IAAI;QACF,MAAM,aAAa,MAAM,MAAM,GAAG,YAAY,UAAU,EAAE,SAAS,QAAQ,CAAC,EAAE;YAC5E,OAAO;QACT;QACA,IAAI,WAAW,EAAE,EAAE;YACjB,cAAc,MAAM,WAAW,IAAI;QACrC;IACF,EAAE,OAAO,OAAO;QACd,4DAA4D;QAC5D,cAAc;IAChB;IAEA,wCAAwC;IACxC,qBACE,8OAAC,wJAAa;QACZ,UAAU;QACV,aAAa;;;;;;AAGnB;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa","debugId":null}}]
}