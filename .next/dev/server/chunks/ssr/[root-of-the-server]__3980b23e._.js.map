{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/shared/schema.ts"],"sourcesContent":["import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, boolean, index, jsonb, json, check, uniqueIndex, numeric } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table - REQUIRED for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => ({\n    expireIdx: index(\"IDX_session_expire\").on(table.expire),\n  }),\n);\n\n// User storage table - Merged Replit Auth + YoForex fields\nexport const users = pgTable(\"users\", {\n  // Core identity field (NEVER change this type - breaking change)\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  \n  // Legacy fields (kept for backward compatibility, will be deprecated)\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\"), // Now optional - Replit Auth handles authentication\n  \n  // Replit Auth fields (added for OIDC integration)\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  \n  // YoForex-specific fields (preserved from original)\n  totalCoins: integer(\"total_coins\").notNull().default(0),\n  weeklyEarned: integer(\"weekly_earned\").notNull().default(0),\n  rank: integer(\"rank\"),\n  youtubeUrl: text(\"youtube_url\"),\n  instagramHandle: text(\"instagram_handle\"),\n  telegramHandle: text(\"telegram_handle\"),\n  myfxbookLink: text(\"myfxbook_link\"),\n  investorId: text(\"investor_id\"),\n  investorPassword: text(\"investor_password\"),\n  isVerifiedTrader: boolean(\"is_verified_trader\").notNull().default(false),\n  emailNotifications: boolean(\"email_notifications\").notNull().default(true),\n  hasYoutubeReward: boolean(\"has_youtube_reward\").notNull().default(false),\n  hasMyfxbookReward: boolean(\"has_myfxbook_reward\").notNull().default(false),\n  hasInvestorReward: boolean(\"has_investor_reward\").notNull().default(false),\n  \n  // Badges & Achievements\n  badges: text(\"badges\").array().default(sql`'{}'::text[]`),\n  \n  // Onboarding System\n  onboardingCompleted: boolean(\"onboarding_completed\").default(false),\n  onboardingDismissed: boolean(\"onboarding_dismissed\").default(false),\n  onboardingProgress: json(\"onboarding_progress\").default({\n    profileCreated: false,\n    firstReply: false,\n    firstReport: false,\n    firstUpload: false,\n    socialLinked: false,\n  }),\n  \n  // Ranking system\n  reputationScore: integer(\"reputation_score\").notNull().default(0),\n  lastReputationUpdate: timestamp(\"last_reputation_update\"),\n  \n  // Timestamps\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n}, (table) => ({\n  usernameIdx: index(\"idx_users_username\").on(table.username),\n  emailIdx: index(\"idx_users_email\").on(table.email),\n  reputationIdx: index(\"idx_users_reputation\").on(table.reputationScore),\n  coinsCheck: check(\"chk_user_coins_nonnegative\", sql`${table.totalCoins} >= 0`),\n}));\n\nexport const coinTransactions = pgTable(\"coin_transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull().$type<\"earn\" | \"spend\" | \"recharge\">(),\n  amount: integer(\"amount\").notNull(),\n  description: text(\"description\").notNull(),\n  status: text(\"status\").notNull().$type<\"completed\" | \"pending\" | \"failed\">().default(\"completed\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_coin_transactions_user_id\").on(table.userId),\n}));\n\nexport const rechargeOrders = pgTable(\"recharge_orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  coinAmount: integer(\"coin_amount\").notNull(),\n  priceUsd: integer(\"price_usd\").notNull(),\n  paymentMethod: text(\"payment_method\").notNull().$type<\"stripe\" | \"crypto\">(),\n  paymentId: text(\"payment_id\"),\n  status: text(\"status\").notNull().$type<\"pending\" | \"completed\" | \"failed\">().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n}, (table) => ({\n  userIdIdx: index(\"idx_recharge_orders_user_id\").on(table.userId),\n}));\n\nexport const withdrawalRequests = pgTable(\"withdrawal_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  amount: integer(\"amount\").notNull(),\n  cryptoType: text(\"crypto_type\").notNull().$type<\"BTC\" | \"ETH\">(),\n  walletAddress: text(\"wallet_address\").notNull(),\n  status: text(\"status\").notNull().$type<\"pending\" | \"processing\" | \"completed\" | \"failed\" | \"cancelled\">().default(\"pending\"),\n  exchangeRate: numeric(\"exchange_rate\", { precision: 20, scale: 8 }).notNull(),\n  cryptoAmount: numeric(\"crypto_amount\", { precision: 20, scale: 8 }).notNull(),\n  processingFee: integer(\"processing_fee\").notNull(),\n  transactionHash: text(\"transaction_hash\"),\n  adminNotes: text(\"admin_notes\"),\n  requestedAt: timestamp(\"requested_at\").notNull().defaultNow(),\n  processedAt: timestamp(\"processed_at\"),\n  completedAt: timestamp(\"completed_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_withdrawal_requests_user_id\").on(table.userId),\n  statusIdx: index(\"idx_withdrawal_requests_status\").on(table.status),\n  amountCheck: check(\"chk_withdrawal_amount_min\", sql`${table.amount} >= 1000`),\n}));\n\nexport const content = pgTable(\"content\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  authorId: varchar(\"author_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull().$type<\"ea\" | \"indicator\" | \"article\" | \"source_code\">(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  priceCoins: integer(\"price_coins\").notNull().default(0),\n  isFree: boolean(\"is_free\").notNull().default(true),\n  category: text(\"category\").notNull(),\n  \n  // Publishing flow fields\n  platform: text(\"platform\").$type<\"MT4\" | \"MT5\" | \"Both\">(),\n  version: text(\"version\"),\n  tags: text(\"tags\").array(),\n  files: jsonb(\"files\").$type<Array<{name: string; size: number; url: string; checksum: string}>>(),\n  images: jsonb(\"images\").$type<Array<{url: string; isCover: boolean; order: number}>>(),\n  \n  // Optional fields\n  brokerCompat: text(\"broker_compat\").array(),\n  minDeposit: integer(\"min_deposit\"),\n  hedging: boolean(\"hedging\"),\n  changelog: text(\"changelog\"),\n  license: text(\"license\"),\n  \n  // Evidence fields (for Performance Reports)\n  equityCurveImage: text(\"equity_curve_image\"),\n  profitFactor: integer(\"profit_factor\"),\n  drawdownPercent: integer(\"drawdown_percent\"),\n  winPercent: integer(\"win_percent\"),\n  broker: text(\"broker\"),\n  monthsTested: integer(\"months_tested\"),\n  \n  // Legacy fields\n  fileUrl: text(\"file_url\"),\n  imageUrl: text(\"image_url\"),\n  imageUrls: text(\"image_urls\").array(),\n  postLogoUrl: text(\"post_logo_url\"),\n  views: integer(\"views\").notNull().default(0),\n  downloads: integer(\"downloads\").notNull().default(0),\n  likes: integer(\"likes\").notNull().default(0),\n  isFeatured: boolean(\"is_featured\").notNull().default(false),\n  averageRating: integer(\"average_rating\"),\n  reviewCount: integer(\"review_count\").notNull().default(0),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  slug: text(\"slug\").notNull().unique(),\n  focusKeyword: text(\"focus_keyword\"),\n  autoMetaDescription: text(\"auto_meta_description\"),\n  autoImageAltTexts: text(\"auto_image_alt_texts\").array(),\n  \n  // Ranking system\n  salesScore: integer(\"sales_score\").notNull().default(0),\n  lastSalesUpdate: timestamp(\"last_sales_update\"),\n  \n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  authorIdIdx: index(\"idx_content_author_id\").on(table.authorId),\n  statusIdx: index(\"idx_content_status\").on(table.status),\n  categoryIdx: index(\"idx_content_category\").on(table.category),\n  slugIdx: index(\"idx_content_slug\").on(table.slug),\n  salesScoreIdx: index(\"idx_content_sales_score\").on(table.salesScore),\n}));\n\nexport const contentPurchases = pgTable(\"content_purchases\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  buyerId: varchar(\"buyer_id\").notNull().references(() => users.id),\n  sellerId: varchar(\"seller_id\").notNull().references(() => users.id),\n  priceCoins: integer(\"price_coins\").notNull(),\n  transactionId: varchar(\"transaction_id\").notNull().references(() => coinTransactions.id),\n  purchasedAt: timestamp(\"purchased_at\").notNull().defaultNow(),\n}, (table) => ({\n  buyerIdIdx: index(\"idx_content_purchases_user_id\").on(table.buyerId),\n  contentIdIdx: index(\"idx_content_purchases_content_id\").on(table.contentId),\n}));\n\nexport const contentReviews = pgTable(\"content_reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  rating: integer(\"rating\").notNull(),\n  review: text(\"review\").notNull(),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  rewardGiven: boolean(\"reward_given\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n});\n\nexport const contentLikes = pgTable(\"content_likes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_content_likes_user_id\").on(table.userId),\n}));\n\nexport const contentReplies = pgTable(\"content_replies\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  parentId: varchar(\"parent_id\").references((): any => contentReplies.id),\n  body: text(\"body\").notNull(),\n  rating: integer(\"rating\"),\n  imageUrls: text(\"image_urls\").array(),\n  helpful: integer(\"helpful\").notNull().default(0),\n  isVerified: boolean(\"is_verified\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n});\n\nexport const brokers = pgTable(\"brokers\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  websiteUrl: text(\"website_url\"),\n  logoUrl: text(\"logo_url\"),\n  yearFounded: integer(\"year_founded\"),\n  regulation: text(\"regulation\"),\n  regulationSummary: text(\"regulation_summary\"),\n  platform: text(\"platform\"),\n  spreadType: text(\"spread_type\"),\n  minSpread: numeric(\"min_spread\", { precision: 10, scale: 2 }),\n  overallRating: integer(\"overall_rating\").default(0),\n  reviewCount: integer(\"review_count\").notNull().default(0),\n  scamReportCount: integer(\"scam_report_count\").notNull().default(0),\n  isVerified: boolean(\"is_verified\").notNull().default(false),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  slugIdx: index(\"idx_brokers_slug\").on(table.slug),\n  statusIdx: index(\"idx_brokers_status\").on(table.status),\n  regulationIdx: index(\"idx_brokers_regulation\").on(table.regulation),\n  platformIdx: index(\"idx_brokers_platform\").on(table.platform),\n}));\n\nexport const brokerReviews = pgTable(\"broker_reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  brokerId: varchar(\"broker_id\").notNull().references(() => brokers.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  rating: integer(\"rating\").notNull(),\n  reviewTitle: text(\"review_title\").notNull(),\n  reviewBody: text(\"review_body\").notNull(),\n  isScamReport: boolean(\"is_scam_report\").notNull().default(false),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  datePosted: timestamp(\"date_posted\").notNull().defaultNow(),\n}, (table) => ({\n  brokerIdIdx: index(\"idx_broker_reviews_broker_id\").on(table.brokerId),\n}));\n\nexport const userFollows = pgTable(\"user_follows\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  followerId: varchar(\"follower_id\").notNull().references(() => users.id),\n  followingId: varchar(\"following_id\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  followerIdIdx: index(\"idx_user_follows_follower_id\").on(table.followerId),\n}));\n\nexport const conversations = pgTable(\"conversations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  participant1Id: varchar(\"participant1_id\").notNull().references(() => users.id),\n  participant2Id: varchar(\"participant2_id\").notNull().references(() => users.id),\n  lastMessageAt: timestamp(\"last_message_at\").notNull().defaultNow(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n});\n\nexport const messages = pgTable(\"messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  conversationId: varchar(\"conversation_id\").notNull().references(() => conversations.id),\n  senderId: varchar(\"sender_id\").notNull().references(() => users.id),\n  recipientId: varchar(\"recipient_id\").notNull().references(() => users.id),\n  body: text(\"body\").notNull(),\n  isRead: boolean(\"is_read\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  conversationIdIdx: index(\"idx_messages_conversation_id\").on(table.conversationId),\n}));\n\n// Notifications system\nexport const notifications = pgTable(\"notifications\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull().$type<\"reply\" | \"like\" | \"follow\" | \"purchase\" | \"badge\" | \"system\">(),\n  title: text(\"title\").notNull(),\n  message: text(\"message\").notNull(),\n  actionUrl: text(\"action_url\"),\n  isRead: boolean(\"is_read\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_notifications_user_id\").on(table.userId),\n  isReadIdx: index(\"idx_notifications_is_read\").on(table.isRead),\n  createdAtIdx: index(\"idx_notifications_created_at\").on(table.createdAt),\n}));\n\n// Forum Threads (separate from marketplace content)\nexport const forumThreads = pgTable(\"forum_threads\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  authorId: varchar(\"author_id\").notNull().references(() => users.id),\n  categorySlug: text(\"category_slug\").notNull(),\n  title: text(\"title\").notNull(),\n  body: text(\"body\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  focusKeyword: text(\"focus_keyword\"),\n  metaDescription: text(\"meta_description\"),\n  isPinned: boolean(\"is_pinned\").notNull().default(false),\n  isLocked: boolean(\"is_locked\").notNull().default(false),\n  isSolved: boolean(\"is_solved\").notNull().default(false),\n  views: integer(\"views\").notNull().default(0),\n  replyCount: integer(\"reply_count\").notNull().default(0),\n  lastActivityAt: timestamp(\"last_activity_at\").notNull().defaultNow(),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"approved\"),\n  \n  // Ranking system\n  engagementScore: integer(\"engagement_score\").notNull().default(0),\n  lastScoreUpdate: timestamp(\"last_score_update\"),\n  \n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  categorySlugIdx: index(\"idx_forum_threads_category\").on(table.categorySlug),\n  statusIdx: index(\"idx_forum_threads_status\").on(table.status),\n  isPinnedIdx: index(\"idx_forum_threads_pinned\").on(table.isPinned),\n  engagementScoreIdx: index(\"idx_forum_threads_engagement\").on(table.engagementScore),\n  lastActivityAtIdx: index(\"idx_forum_threads_last_activity\").on(table.lastActivityAt),\n  slugIdx: index(\"idx_forum_threads_slug\").on(table.slug),\n}));\n\n// Forum Thread Replies (with SEO for each reply)\nexport const forumReplies = pgTable(\"forum_replies\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  threadId: varchar(\"thread_id\").notNull().references(() => forumThreads.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  parentId: varchar(\"parent_id\").references((): any => forumReplies.id),\n  body: text(\"body\").notNull(),\n  slug: text(\"slug\").notNull().unique(), // SEO: Each reply gets unique slug for Google indexing\n  metaDescription: text(\"meta_description\"), // SEO: Auto-generated from body\n  imageUrls: text(\"image_urls\").array(),\n  helpful: integer(\"helpful\").notNull().default(0),\n  isAccepted: boolean(\"is_accepted\").notNull().default(false),\n  isVerified: boolean(\"is_verified\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  threadIdIdx: index(\"idx_forum_replies_thread_id\").on(table.threadId),\n  createdAtIdx: index(\"idx_forum_replies_created_at\").on(table.createdAt),\n  slugIdx: index(\"idx_forum_replies_slug\").on(table.slug),\n}));\n\n// Forum Categories with dynamic stats\nexport const forumCategories = pgTable(\"forum_categories\", {\n  slug: text(\"slug\").primaryKey(),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull(), // Icon name from lucide-react\n  color: text(\"color\").notNull().default(\"bg-primary\"),\n  threadCount: integer(\"thread_count\").notNull().default(0),\n  postCount: integer(\"post_count\").notNull().default(0),\n  sortOrder: integer(\"sort_order\").notNull().default(0),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n});\n\n// User Badges & Trust Levels\nexport const userBadges = pgTable(\"user_badges\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  badgeType: text(\"badge_type\").notNull().$type<\"verified_trader\" | \"top_contributor\" | \"ea_expert\" | \"helpful_member\" | \"early_adopter\">(),\n  awardedAt: timestamp(\"awarded_at\").notNull().defaultNow(),\n});\n\n// Activity Feed for real-time updates\nexport const activityFeed = pgTable(\"activity_feed\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  activityType: text(\"activity_type\").notNull().$type<\"thread_created\" | \"reply_posted\" | \"content_published\" | \"purchase_made\" | \"review_posted\" | \"badge_earned\">(),\n  entityType: text(\"entity_type\").notNull().$type<\"thread\" | \"reply\" | \"content\" | \"purchase\" | \"review\" | \"badge\">(),\n  entityId: varchar(\"entity_id\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_activity_feed_user_id\").on(table.userId),\n}));\n\n// Double-Entry Ledger Tables (Immutable Accounting System)\n\n// User Wallet - One row per user\nexport const userWallet = pgTable(\"user_wallet\", {\n  walletId: varchar(\"wallet_id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  balance: integer(\"balance\").notNull().default(0),\n  availableBalance: integer(\"available_balance\").notNull().default(0),\n  status: text(\"status\").notNull().default(\"active\"),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: uniqueIndex(\"idx_user_wallet_user_id\").on(table.userId),\n  statusIdx: index(\"idx_user_wallet_status\").on(table.status),\n}));\n\n// Coin Ledger Transactions - Header for grouped entries\nexport const coinLedgerTransactions = pgTable(\"coin_ledger_transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  type: text(\"type\").notNull(),\n  context: json(\"context\").$type<Record<string, any>>(),\n  externalRef: text(\"external_ref\"),\n  initiatorUserId: varchar(\"initiator_user_id\").references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  closedAt: timestamp(\"closed_at\"),\n  status: text(\"status\").notNull().default(\"pending\"),\n}, (table) => ({\n  typeIdx: index(\"idx_ledger_tx_type\").on(table.type),\n  statusIdx: index(\"idx_ledger_tx_status\").on(table.status),\n  initiatorIdx: index(\"idx_ledger_tx_initiator\").on(table.initiatorUserId),\n}));\n\n// Coin Journal Entries - Immutable debit/credit entries\nexport const coinJournalEntries = pgTable(\"coin_journal_entries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  ledgerTransactionId: varchar(\"ledger_transaction_id\").notNull()\n    .references(() => coinLedgerTransactions.id),\n  walletId: varchar(\"wallet_id\").notNull().references(() => userWallet.walletId),\n  direction: text(\"direction\").notNull(),\n  amount: integer(\"amount\").notNull(),\n  balanceBefore: integer(\"balance_before\").notNull(),\n  balanceAfter: integer(\"balance_after\").notNull(),\n  memo: text(\"memo\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  ledgerTxIdx: index(\"idx_journal_ledger_tx\").on(table.ledgerTransactionId),\n  walletIdx: index(\"idx_journal_wallet\").on(table.walletId),\n  createdAtIdx: index(\"idx_journal_created_at\").on(table.createdAt),\n  amountCheck: check(\"chk_amount_positive\", sql`${table.amount} > 0`),\n}));\n\n// Ledger Reconciliation Runs - Audit trail\nexport const ledgerReconciliationRuns = pgTable(\"ledger_reconciliation_runs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  status: text(\"status\").notNull(),\n  driftCount: integer(\"drift_count\").notNull().default(0),\n  maxDelta: integer(\"max_delta\").notNull().default(0),\n  report: json(\"report\").$type<Record<string, any>>(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n});\n\n// Dashboard Preferences - User customization\nexport const dashboardPreferences = pgTable(\"dashboard_preferences\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id).unique(),\n  widgetOrder: text(\"widget_order\").array().notNull(),\n  enabledWidgets: text(\"enabled_widgets\").array().notNull(),\n  layoutType: text(\"layout_type\").notNull().$type<\"default\" | \"compact\" | \"comfortable\">().default(\"default\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_dashboard_preferences_user_id\").on(table.userId),\n}));\n\n// Upsert User schema for Replit Auth (OIDC)\nexport const upsertUserSchema = createInsertSchema(users).pick({\n  id: true,\n  email: true,\n  username: true,\n  firstName: true,\n  lastName: true,\n  profileImageUrl: true,\n});\n\nexport type UpsertUser = z.infer<typeof upsertUserSchema>;\n\n// Insert User schema for traditional auth (username/password)\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  totalCoins: true,\n  weeklyEarned: true,\n  rank: true,\n  youtubeUrl: true,\n  instagramHandle: true,\n  telegramHandle: true,\n  myfxbookLink: true,\n  investorId: true,\n  investorPassword: true,\n  isVerifiedTrader: true,\n  emailNotifications: true,\n  hasYoutubeReward: true,\n  hasMyfxbookReward: true,\n  hasInvestorReward: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  username: z.string().min(3).max(50),\n  password: z.string().min(8),\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport const insertCoinTransactionSchema = createInsertSchema(coinTransactions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertRechargeOrderSchema = createInsertSchema(rechargeOrders).omit({\n  id: true,\n  createdAt: true,\n  completedAt: true,\n});\n\nexport const insertWithdrawalRequestSchema = createInsertSchema(withdrawalRequests).omit({\n  id: true,\n  requestedAt: true,\n  processedAt: true,\n  completedAt: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  amount: z.number().min(1000, \"Minimum withdrawal is 1000 coins\"),\n  cryptoType: z.enum([\"BTC\", \"ETH\"]),\n  walletAddress: z.string().min(26, \"Invalid wallet address\").max(100, \"Invalid wallet address\"),\n});\n\nexport const insertContentSchema = createInsertSchema(content).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  views: true,\n  downloads: true,\n  likes: true,\n  status: true,\n  focusKeyword: true,\n  autoMetaDescription: true,\n  autoImageAltTexts: true,\n  slug: true,\n}).extend({\n  title: z.string().min(10).max(120),\n  description: z.string().min(300),\n  priceCoins: z.number().min(0).max(10000),\n  platform: z.enum([\"MT4\", \"MT5\", \"Both\"]).optional(),\n  version: z.string().optional(),\n  tags: z.array(z.string()).max(8).optional(),\n  files: z.array(z.object({\n    name: z.string(),\n    size: z.number(),\n    url: z.string(),\n    checksum: z.string(),\n  })).min(1, \"At least 1 file is required\").optional(),\n  images: z.array(z.object({\n    url: z.string(),\n    isCover: z.boolean(),\n    order: z.number(),\n  })).min(1, \"At least 1 image is required\").optional(),\n  brokerCompat: z.array(z.string()).optional(),\n  minDeposit: z.number().optional(),\n  hedging: z.boolean().optional(),\n  changelog: z.string().optional(),\n  license: z.string().optional(),\n  // Evidence fields (conditionally required based on tags)\n  equityCurveImage: z.string().optional(),\n  profitFactor: z.number().optional(),\n  drawdownPercent: z.number().optional(),\n  winPercent: z.number().optional(),\n  broker: z.string().optional(),\n  monthsTested: z.number().optional(),\n});\n\nexport const insertContentPurchaseSchema = createInsertSchema(contentPurchases).omit({\n  id: true,\n  purchasedAt: true,\n  sellerId: true,\n  transactionId: true,\n  priceCoins: true,\n});\n\nexport const insertContentReviewSchema = createInsertSchema(contentReviews).omit({\n  id: true,\n  createdAt: true,\n  status: true,\n  rewardGiven: true,\n}).extend({\n  rating: z.number().min(1).max(5),\n  review: z.string().min(50).max(1000),\n});\n\nexport const insertContentLikeSchema = createInsertSchema(contentLikes).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertContentReplySchema = createInsertSchema(contentReplies).omit({\n  id: true,\n  createdAt: true,\n  helpful: true,\n  isVerified: true,\n}).extend({\n  body: z.string().min(10).max(5000),\n  rating: z.number().min(1).max(5).optional(),\n});\n\nexport const insertBrokerSchema = createInsertSchema(brokers).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  overallRating: true,\n  reviewCount: true,\n  scamReportCount: true,\n  status: true,\n  isVerified: true,\n});\n\nexport const insertBrokerReviewSchema = createInsertSchema(brokerReviews).omit({\n  id: true,\n  datePosted: true,\n  status: true,\n}).extend({\n  rating: z.number().min(1).max(5),\n  reviewTitle: z.string().min(10).max(200),\n  reviewBody: z.string().min(100).max(2000),\n});\n\nexport const insertUserFollowSchema = createInsertSchema(userFollows).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertConversationSchema = createInsertSchema(conversations).omit({\n  id: true,\n  createdAt: true,\n  lastMessageAt: true,\n});\n\nexport const insertMessageSchema = createInsertSchema(messages).omit({\n  id: true,\n  createdAt: true,\n}).extend({\n  body: z.string().min(1).max(5000),\n});\n\nexport const insertNotificationSchema = createInsertSchema(notifications).omit({\n  id: true,\n  createdAt: true,\n  isRead: true,\n}).extend({\n  title: z.string().min(1).max(200),\n  message: z.string().min(1).max(500),\n});\n\nexport const updateUserProfileSchema = z.object({\n  youtubeUrl: z.string().url().optional().or(z.literal(\"\")),\n  instagramHandle: z.string().min(1).max(50).optional().or(z.literal(\"\")),\n  telegramHandle: z.string().min(1).max(50).optional().or(z.literal(\"\")),\n  myfxbookLink: z.string().url().optional().or(z.literal(\"\")),\n  investorId: z.string().optional().or(z.literal(\"\")),\n  investorPassword: z.string().optional().or(z.literal(\"\")),\n  emailNotifications: z.boolean(),\n});\n\n// User types already defined above near upsertUserSchema\nexport type CoinTransaction = typeof coinTransactions.$inferSelect;\nexport type InsertCoinTransaction = z.infer<typeof insertCoinTransactionSchema>;\nexport type RechargeOrder = typeof rechargeOrders.$inferSelect;\nexport type InsertRechargeOrder = z.infer<typeof insertRechargeOrderSchema>;\nexport type WithdrawalRequest = typeof withdrawalRequests.$inferSelect;\nexport type InsertWithdrawalRequest = z.infer<typeof insertWithdrawalRequestSchema>;\nexport type Content = typeof content.$inferSelect;\nexport type InsertContent = z.infer<typeof insertContentSchema>;\nexport type ContentPurchase = typeof contentPurchases.$inferSelect;\nexport type InsertContentPurchase = z.infer<typeof insertContentPurchaseSchema>;\nexport type ContentReview = typeof contentReviews.$inferSelect;\nexport type InsertContentReview = z.infer<typeof insertContentReviewSchema>;\nexport type ContentLike = typeof contentLikes.$inferSelect;\nexport type InsertContentLike = z.infer<typeof insertContentLikeSchema>;\nexport type ContentReply = typeof contentReplies.$inferSelect;\nexport type InsertContentReply = z.infer<typeof insertContentReplySchema>;\nexport type Broker = typeof brokers.$inferSelect;\nexport type InsertBroker = z.infer<typeof insertBrokerSchema>;\nexport type BrokerReview = typeof brokerReviews.$inferSelect;\nexport type InsertBrokerReview = z.infer<typeof insertBrokerReviewSchema>;\nexport type UserFollow = typeof userFollows.$inferSelect;\nexport type InsertUserFollow = z.infer<typeof insertUserFollowSchema>;\nexport type Conversation = typeof conversations.$inferSelect;\nexport type InsertConversation = z.infer<typeof insertConversationSchema>;\nexport type Message = typeof messages.$inferSelect;\nexport type InsertMessage = z.infer<typeof insertMessageSchema>;\nexport type Notification = typeof notifications.$inferSelect;\nexport type InsertNotification = z.infer<typeof insertNotificationSchema>;\nexport type UpdateUserProfile = z.infer<typeof updateUserProfileSchema>;\n\nexport const insertForumThreadSchema = createInsertSchema(forumThreads).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  views: true,\n  replyCount: true,\n  lastActivityAt: true,\n  slug: true,\n  focusKeyword: true,\n  metaDescription: true,\n  status: true,\n}).extend({\n  title: z.string().min(10).max(300),\n  body: z.string().min(50).max(50000),\n});\n\nexport const insertForumReplySchema = createInsertSchema(forumReplies).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  helpful: true,\n  isAccepted: true,\n  isVerified: true,\n  slug: true,\n  metaDescription: true,\n}).extend({\n  body: z.string().min(10).max(10000),\n});\n\nexport const insertForumCategorySchema = createInsertSchema(forumCategories).omit({\n  threadCount: true,\n  postCount: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  name: z.string().min(3).max(100),\n  description: z.string().min(10).max(500),\n});\n\nexport const insertUserBadgeSchema = createInsertSchema(userBadges).omit({\n  id: true,\n  awardedAt: true,\n});\n\nexport const insertActivityFeedSchema = createInsertSchema(activityFeed).omit({\n  id: true,\n  createdAt: true,\n}).extend({\n  title: z.string().min(1).max(300),\n  description: z.string().max(500).optional(),\n});\n\nexport type ForumThread = typeof forumThreads.$inferSelect;\nexport type InsertForumThread = z.infer<typeof insertForumThreadSchema>;\nexport type ForumReply = typeof forumReplies.$inferSelect;\nexport type InsertForumReply = z.infer<typeof insertForumReplySchema>;\nexport type ForumCategory = typeof forumCategories.$inferSelect;\nexport type InsertForumCategory = z.infer<typeof insertForumCategorySchema>;\nexport type UserBadge = typeof userBadges.$inferSelect;\nexport type InsertUserBadge = z.infer<typeof insertUserBadgeSchema>;\nexport type ActivityFeed = typeof activityFeed.$inferSelect;\nexport type InsertActivityFeed = z.infer<typeof insertActivityFeedSchema>;\n\n// Double-Entry Ledger schemas\nexport const insertUserWalletSchema = createInsertSchema(userWallet).omit({ walletId: true, updatedAt: true });\nexport type InsertUserWallet = z.infer<typeof insertUserWalletSchema>;\nexport type UserWallet = typeof userWallet.$inferSelect;\n\nexport const insertCoinLedgerTransactionSchema = createInsertSchema(coinLedgerTransactions)\n  .omit({ id: true, createdAt: true, closedAt: true });\nexport type InsertCoinLedgerTransaction = z.infer<typeof insertCoinLedgerTransactionSchema>;\nexport type CoinLedgerTransaction = typeof coinLedgerTransactions.$inferSelect;\n\nexport const insertCoinJournalEntrySchema = createInsertSchema(coinJournalEntries)\n  .omit({ id: true, createdAt: true });\nexport type InsertCoinJournalEntry = z.infer<typeof insertCoinJournalEntrySchema>;\nexport type CoinJournalEntry = typeof coinJournalEntries.$inferSelect;\n\nexport const insertLedgerReconciliationRunSchema = createInsertSchema(ledgerReconciliationRuns)\n  .omit({ id: true, createdAt: true, completedAt: true });\nexport type InsertLedgerReconciliationRun = z.infer<typeof insertLedgerReconciliationRunSchema>;\nexport type LedgerReconciliationRun = typeof ledgerReconciliationRuns.$inferSelect;\n\n// Dashboard Preferences schemas\nexport const insertDashboardPreferencesSchema = createInsertSchema(dashboardPreferences)\n  .omit({ id: true, createdAt: true, updatedAt: true });\nexport type InsertDashboardPreferences = z.infer<typeof insertDashboardPreferencesSchema>;\nexport type DashboardPreferences = typeof dashboardPreferences.$inferSelect;\n\n// Publish-specific validation schema with conditional evidence fields\nexport const publishContentSchema = insertContentSchema.superRefine((data, ctx) => {\n  // Check if \"Performance Report\" tag is included\n  const hasPerformanceReportTag = data.tags?.includes(\"Performance Report\");\n  \n  if (hasPerformanceReportTag) {\n    // Require evidence fields when Performance Report tag is present\n    if (!data.equityCurveImage) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Equity curve image is required for Performance Reports\",\n        path: [\"equityCurveImage\"],\n      });\n    }\n    if (!data.profitFactor) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Profit Factor is required for Performance Reports\",\n        path: [\"profitFactor\"],\n      });\n    }\n    if (!data.drawdownPercent) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Drawdown % is required for Performance Reports\",\n        path: [\"drawdownPercent\"],\n      });\n    }\n    if (!data.winPercent) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Win % is required for Performance Reports\",\n        path: [\"winPercent\"],\n      });\n    }\n    if (!data.broker) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Broker name is required for Performance Reports\",\n        path: [\"broker\"],\n      });\n    }\n    if (!data.monthsTested) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Months Tested is required for Performance Reports\",\n        path: [\"monthsTested\"],\n      });\n    }\n  }\n  \n  return data;\n});\n\nexport type PublishContent = z.infer<typeof publishContentSchema>;\n\n// Badge System Constants\nexport const BADGE_TYPES = {\n  VERIFIED_TRADER: 'verified_trader',\n  TOP_CONTRIBUTOR: 'top_contributor',\n  EA_MASTER: 'ea_master',\n  HELPFUL: 'helpful',\n  EARLY_ADOPTER: 'early_adopter',\n  BUG_HUNTER: 'bug_hunter',\n} as const;\n\nexport type BadgeType = typeof BADGE_TYPES[keyof typeof BADGE_TYPES];\n\nexport const BADGE_METADATA: Record<BadgeType, {\n  name: string;\n  description: string;\n  icon: string;\n  color: string;\n}> = {\n  [BADGE_TYPES.VERIFIED_TRADER]: {\n    name: 'Verified Trader',\n    description: 'Linked and verified trading account',\n    icon: 'ShieldCheck',\n    color: 'text-blue-500',\n  },\n  [BADGE_TYPES.TOP_CONTRIBUTOR]: {\n    name: 'Top Contributor',\n    description: 'Top 10 on contributor leaderboard',\n    icon: 'Star',\n    color: 'text-yellow-500',\n  },\n  [BADGE_TYPES.EA_MASTER]: {\n    name: 'EA Master',\n    description: 'Published 5+ Expert Advisors',\n    icon: 'Award',\n    color: 'text-purple-500',\n  },\n  [BADGE_TYPES.HELPFUL]: {\n    name: 'Helpful',\n    description: '50+ helpful replies',\n    icon: 'Heart',\n    color: 'text-red-500',\n  },\n  [BADGE_TYPES.EARLY_ADOPTER]: {\n    name: 'Early Adopter',\n    description: 'Joined in the first month',\n    icon: 'Zap',\n    color: 'text-orange-500',\n  },\n  [BADGE_TYPES.BUG_HUNTER]: {\n    name: 'Bug Hunter',\n    description: 'Reported verified bugs',\n    icon: 'Bug',\n    color: 'text-green-500',\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 937, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/shared/relations.ts"],"sourcesContent":["// Drizzle Relations for Relational Query API\n// This file defines relationships between tables for use with db.query API\n\nimport { relations } from 'drizzle-orm';\nimport {\n  users,\n  forumThreads,\n  forumReplies,\n  content,\n  contentReviews,\n  brokers,\n  brokerReviews,\n  contentPurchases,\n} from './schema';\n\n// Users Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  threads: many(forumThreads),\n  replies: many(forumReplies),\n  content: many(content),\n  reviews: many(contentReviews),\n  brokerReviews: many(brokerReviews),\n  purchases: many(contentPurchases, { relationName: 'buyer' }),\n  sales: many(contentPurchases, { relationName: 'seller' }),\n}));\n\n// Forum Threads Relations\nexport const forumThreadsRelations = relations(forumThreads, ({ one, many }) => ({\n  author: one(users, {\n    fields: [forumThreads.authorId],\n    references: [users.id],\n  }),\n  replies: many(forumReplies),\n}));\n\n// Forum Replies Relations\nexport const forumRepliesRelations = relations(forumReplies, ({ one }) => ({\n  thread: one(forumThreads, {\n    fields: [forumReplies.threadId],\n    references: [forumThreads.id],\n  }),\n  author: one(users, {\n    fields: [forumReplies.userId],\n    references: [users.id],\n  }),\n}));\n\n// Content Relations\nexport const contentRelations = relations(content, ({ one, many }) => ({\n  author: one(users, {\n    fields: [content.authorId],\n    references: [users.id],\n  }),\n  reviews: many(contentReviews),\n  purchases: many(contentPurchases),\n}));\n\n// Content Reviews Relations\nexport const contentReviewsRelations = relations(contentReviews, ({ one }) => ({\n  content: one(content, {\n    fields: [contentReviews.contentId],\n    references: [content.id],\n  }),\n  author: one(users, {\n    fields: [contentReviews.userId],\n    references: [users.id],\n  }),\n}));\n\n// Broker Relations\nexport const brokersRelations = relations(brokers, ({ many }) => ({\n  reviews: many(brokerReviews),\n}));\n\n// Broker Reviews Relations\nexport const brokerReviewsRelations = relations(brokerReviews, ({ one }) => ({\n  broker: one(brokers, {\n    fields: [brokerReviews.brokerId],\n    references: [brokers.id],\n  }),\n  author: one(users, {\n    fields: [brokerReviews.userId],\n    references: [users.id],\n  }),\n}));\n\n// Content Purchases Relations\nexport const contentPurchasesRelations = relations(contentPurchases, ({ one }) => ({\n  content: one(content, {\n    fields: [contentPurchases.contentId],\n    references: [content.id],\n  }),\n  buyer: one(users, {\n    fields: [contentPurchases.buyerId],\n    references: [users.id],\n    relationName: 'buyer',\n  }),\n  seller: one(users, {\n    fields: [contentPurchases.sellerId],\n    references: [users.id],\n    relationName: 'seller',\n  }),\n}));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1086, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/db.ts"],"sourcesContent":["import { drizzle } from 'drizzle-orm/neon-serverless';\nimport { Pool } from '@neondatabase/serverless';\nimport * as schema from '../shared/schema';\nimport * as relations from '../shared/relations';\n\nif (!process.env.DATABASE_URL) {\n  throw new Error('DATABASE_URL environment variable is not set');\n}\n\n// Create connection pool\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n});\n\n// Create Drizzle instance with schema and relations\nexport const db = drizzle(pool, { schema: { ...schema, ...relations } });\n\n// Helper function to get global stats (for homepage)\nexport async function getGlobalStats() {\n  const { count } = await import('drizzle-orm');\n  const { forumThreads, users, forumReplies, content } = schema;\n\n  const [threadCount, userCount, replyCount, contentCount] = await Promise.all([\n    db.select({ count: count() }).from(forumThreads),\n    db.select({ count: count() }).from(users),\n    db.select({ count: count() }).from(forumReplies),\n    db.select({ count: count() }).from(content),\n  ]);\n\n  return {\n    totalThreads: threadCount[0].count,\n    totalMembers: userCount[0].count,\n    totalPosts: replyCount[0].count,\n    totalContent: contentCount[0].count,\n    weeklyActivity: 0, // TODO: Calculate from database\n  };\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,YAAY,EAAE;IAC7B,MAAM,IAAI,MAAM;AAClB;AAEA,yBAAyB;AACzB,MAAM,OAAO,IAAI,8JAAI,CAAC;IACpB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;AAC5C;AAGO,MAAM,KAAK,IAAA,yKAAO,EAAC,MAAM;IAAE,QAAQ;QAAE,GAAG,gHAAM;QAAE,GAAG,mHAAS;IAAC;AAAE;AAG/D,eAAe;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG;IAClB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG;IAEvD,MAAM,CAAC,aAAa,WAAW,YAAY,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC3E,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;QACnC,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;QACnC,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;QACnC,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;KACpC;IAED,OAAO;QACL,cAAc,WAAW,CAAC,EAAE,CAAC,KAAK;QAClC,cAAc,SAAS,CAAC,EAAE,CAAC,KAAK;QAChC,YAAY,UAAU,CAAC,EAAE,CAAC,KAAK;QAC/B,cAAc,YAAY,CAAC,EAAE,CAAC,KAAK;QACnC,gBAAgB;IAClB;AACF","debugId":null}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 1157, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2FACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1242, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,+CAA+C;AAC/C,2LACA,mBACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WAAW;YACX,aACE;YAEF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/Header.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Header.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Header.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/Header.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Header.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Header.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/Footer.tsx"],"sourcesContent":["import Link from 'next/link';\n\nexport function Footer() {\n  return (\n    <footer className=\"border-t mt-12\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {/* About */}\n          <div>\n            <h3 className=\"font-semibold mb-3\">YoForex</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              The #1 Expert Advisor community. Download free EAs, share strategies, and earn coins.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-semibold mb-3\">Quick Links</h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <Link href=\"/marketplace\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-marketplace\">\n                  Marketplace\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/discussions\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-discussions\">\n                  Discussions\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/categories\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-categories\">\n                  Categories\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/brokers\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-brokers\">\n                  Brokers\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Community */}\n          <div>\n            <h3 className=\"font-semibold mb-3\">Community</h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <Link href=\"/leaderboard\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-leaderboard\">\n                  Leaderboard\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/members\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-members\">\n                  Members\n                </Link>\n              </li>\n              <li>\n                <a href={`${process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000'}/earn-coins`} className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-earn-coins\">\n                  Earn Coins\n                </a>\n              </li>\n              <li>\n                <a href={`${process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000'}/feedback`} className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-feedback\">\n                  Feedback\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Support */}\n          <div>\n            <h3 className=\"font-semibold mb-3\">Support</h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <a href={`${process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000'}/support`} className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-support\">\n                  Contact Support\n                </a>\n              </li>\n              <li>\n                <a href={`${process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000'}/api-docs`} className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-api-docs\">\n                  API Docs\n                </a>\n              </li>\n              <li>\n                <Link href=\"/sitemap.xml\" className=\"text-muted-foreground hover:text-foreground\" data-testid=\"link-footer-sitemap\">\n                  Sitemap\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <div className=\"mt-8 pt-8 border-t text-center text-sm text-muted-foreground\">\n          <p>© 2025 YoForex. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;;;;;;;sCAM/C,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAe,WAAU;gDAA8C,eAAY;0DAA0B;;;;;;;;;;;sDAI1H,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAe,WAAU;gDAA8C,eAAY;0DAA0B;;;;;;;;;;;sDAI1H,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAc,WAAU;gDAA8C,eAAY;0DAAyB;;;;;;;;;;;sDAIxH,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAW,WAAU;gDAA8C,eAAY;0DAAsB;;;;;;;;;;;;;;;;;;;;;;;sCAQtH,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAe,WAAU;gDAA8C,eAAY;0DAA0B;;;;;;;;;;;sDAI1H,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAW,WAAU;gDAA8C,eAAY;0DAAsB;;;;;;;;;;;sDAIlH,8OAAC;sDACC,cAAA,8OAAC;gDAAE,MAAM,GAAG,6DAAuC,wBAAwB,WAAW,CAAC;gDAAE,WAAU;gDAA8C,eAAY;0DAAyB;;;;;;;;;;;sDAIxL,8OAAC;sDACC,cAAA,8OAAC;gDAAE,MAAM,GAAG,6DAAuC,wBAAwB,SAAS,CAAC;gDAAE,WAAU;gDAA8C,eAAY;0DAAuB;;;;;;;;;;;;;;;;;;;;;;;sCAQxL,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;sDACC,cAAA,8OAAC;gDAAE,MAAM,GAAG,6DAAuC,wBAAwB,QAAQ,CAAC;gDAAE,WAAU;gDAA8C,eAAY;0DAAsB;;;;;;;;;;;sDAIlL,8OAAC;sDACC,cAAA,8OAAC;gDAAE,MAAM,GAAG,6DAAuC,wBAAwB,SAAS,CAAC;gDAAE,WAAU;gDAA8C,eAAY;0DAAuB;;;;;;;;;;;sDAIpL,8OAAC;sDACC,cAAA,8OAAC,0LAAI;gDAAC,MAAK;gDAAe,WAAU;gDAA8C,eAAY;0DAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAS5H,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAKb","debugId":null}},
    {"offset": {"line": 1649, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/categories/page.tsx"],"sourcesContent":["import { db } from '../../lib/db';\nimport { forumCategories } from '../../shared/schema';\nimport Link from 'next/link';\nimport type { Metadata } from 'next';\nimport { \n  MessageSquare, \n  FileText, \n  Users,\n  Lightbulb, \n  HelpCircle, \n  TrendingUp, \n  Settings, \n  Code, \n  Award,\n  BookOpen,\n  Activity,\n  Wrench,\n  FileCode,\n  GraduationCap,\n  MessageCircle,\n  Trophy,\n  BarChart3,\n  Rocket,\n  ShieldAlert\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Header } from '../components/Header';\nimport { Footer } from '../components/Footer';\n\n// ISR - Revalidate every 60 seconds\nexport const revalidate = 60;\n\n// SEO Metadata\nexport const metadata: Metadata = {\n  title: 'Forum Categories - Browse All Discussion Topics | YoForex',\n  description: 'Explore 15+ forum categories covering EA strategies, backtesting, live trading, broker reviews, MT4/MT5 tips, and more. Join focused discussions with expert traders.',\n  keywords: ['forum categories', 'trading discussions', 'EA strategy forum', 'backtest forum', 'broker reviews', 'MT4 forum', 'MT5 forum', 'trading help'],\n  openGraph: {\n    title: 'Forum Categories - YoForex',\n    description: 'Explore 15+ forum categories covering EA strategies, backtesting, live trading, and more.',\n    type: 'website',\n    url: 'https://yoforex.net/categories',\n  },\n  twitter: {\n    card: 'summary_large_image',\n    title: 'Forum Categories - YoForex',\n    description: 'Explore forum categories covering EA strategies, backtesting, and trading discussions.',\n  },\n};\n\n// Icon mapping for categories\nconst iconMap: Record<string, any> = {\n  \"strategy-discussion\": Lightbulb,\n  \"algorithm-development\": Code,\n  \"backtest-results\": TrendingUp,\n  \"live-trading-reports\": BarChart3,\n  \"signal-services\": Activity,\n  \"mt4-mt5-tips\": Settings,\n  \"broker-discussion\": Users,\n  \"risk-management\": ShieldAlert,\n  \"market-analysis\": TrendingUp,\n  \"indicator-library\": Activity,\n  \"ea-reviews\": Award,\n  \"troubleshooting\": Wrench,\n  \"trading-psychology\": GraduationCap,\n  \"news-updates\": FileText,\n  \"commercial-trials\": Rocket,\n};\n\n// Main Server Component\nexport default async function CategoriesPage() {\n  // Server-side data fetching\n  const categories = await db.query.forumCategories.findMany({\n    orderBy: (forumCategories, { asc }) => [asc(forumCategories.name)],\n  });\n\n  // Calculate total stats\n  const totalThreads = categories.reduce((sum, cat) => sum + cat.threadCount, 0);\n  const totalPosts = categories.reduce((sum, cat) => sum + cat.postCount, 0);\n\n  // JSON-LD structured data\n  const jsonLd = {\n    '@context': 'https://schema.org',\n    '@type': 'CollectionPage',\n    name: 'Forum Categories',\n    description: 'Browse all forum categories for Expert Advisor discussions',\n    url: 'https://yoforex.net/categories',\n    mainEntity: {\n      '@type': 'ItemList',\n      numberOfItems: categories.length,\n      itemListElement: categories.map((category, index) => ({\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@type': 'Thing',\n          name: category.name,\n          description: category.description,\n          url: `https://yoforex.net/category/${category.slug}`,\n        },\n      })),\n    },\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* JSON-LD */}\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}\n      />\n\n      <Header />\n\n      <main className=\"container max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\" data-testid=\"heading-categories\">Forum Categories</h1>\n          <p className=\"text-muted-foreground\">\n            Browse all discussion categories. Choose the right place for your questions and contributions.\n          </p>\n        </div>\n\n        {/* Categories Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {categories && categories.length > 0 ? (\n            categories.map((category) => {\n              const IconComponent = iconMap[category.slug] || MessageSquare;\n              \n              return (\n                <Link key={category.slug} href={`/category/${category.slug}`} data-testid={`link-category-${category.slug}`}>\n                  <Card \n                    className=\"h-full hover-elevate active-elevate-2 cursor-pointer\" \n                    data-testid={`card-category-${category.slug}`}\n                  >\n                    <CardHeader>\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"p-3 rounded-lg bg-primary/10 shrink-0\">\n                          <IconComponent className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <CardTitle className=\"text-base mb-1\" data-testid={`text-category-name-${category.slug}`}>\n                            {category.name}\n                          </CardTitle>\n                          <div className=\"flex items-center gap-2 flex-wrap\">\n                            <Badge variant=\"secondary\" className=\"text-xs\" data-testid={`badge-threads-${category.slug}`}>\n                              <MessageSquare className=\"w-3 h-3 mr-1\" />\n                              {category.threadCount} threads\n                            </Badge>\n                            <Badge variant=\"outline\" className=\"text-xs\" data-testid={`badge-posts-${category.slug}`}>\n                              <FileText className=\"w-3 h-3 mr-1\" />\n                              {category.postCount} posts\n                            </Badge>\n                          </div>\n                        </div>\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <CardDescription className=\"text-sm\" data-testid={`text-category-description-${category.slug}`}>\n                        {category.description}\n                      </CardDescription>\n                    </CardContent>\n                  </Card>\n                </Link>\n              );\n            })\n          ) : (\n            <div className=\"col-span-full\">\n              <Card className=\"p-12 text-center\">\n                <MessageSquare className=\"w-16 h-16 mx-auto mb-4 text-muted-foreground/50\" />\n                <h3 className=\"text-xl font-semibold mb-2\">No categories available</h3>\n                <p className=\"text-muted-foreground\">\n                  Categories will appear here once they are created.\n                </p>\n              </Card>\n            </div>\n          )}\n        </div>\n\n        {/* Statistics Summary */}\n        {categories && categories.length > 0 && (\n          <div className=\"mt-12 grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Total Categories</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\" data-testid=\"stat-total-categories\">\n                  {categories.length}\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Total Threads</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\" data-testid=\"stat-total-threads\">\n                  {totalThreads.toLocaleString()}\n                </p>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Total Posts</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\" data-testid=\"stat-total-posts\">\n                  {totalPosts.toLocaleString()}\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Most Active Categories */}\n        {categories && categories.length > 3 && (\n          <div className=\"mt-12\">\n            <h2 className=\"text-2xl font-bold mb-6\">Most Active Categories</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {[...categories]\n                .sort((a, b) => b.threadCount - a.threadCount)\n                .slice(0, 3)\n                .map((category) => {\n                  const IconComponent = iconMap[category.slug] || MessageSquare;\n                  \n                  return (\n                    <Link key={`active-${category.slug}`} href={`/category/${category.slug}`}>\n                      <Card className=\"hover-elevate active-elevate-2 cursor-pointer\">\n                        <CardContent className=\"p-6\">\n                          <div className=\"flex items-center gap-3 mb-3\">\n                            <div className=\"p-2 rounded-lg bg-primary/10\">\n                              <IconComponent className=\"w-5 h-5 text-primary\" />\n                            </div>\n                            <CardTitle className=\"text-base\">{category.name}</CardTitle>\n                          </div>\n                          <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                            <div className=\"flex items-center gap-1\">\n                              <MessageSquare className=\"w-4 h-4\" />\n                              {category.threadCount}\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              <FileText className=\"w-4 h-4\" />\n                              {category.postCount}\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </Link>\n                  );\n                })}\n            </div>\n          </div>\n        )}\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}