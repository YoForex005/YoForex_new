{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/members/MembersClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/members/MembersClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/members/MembersClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/members/MembersClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/members/MembersClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/members/MembersClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/members/page.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport MembersClient from './MembersClient';\n\n// SEO Metadata\nexport const metadata: Metadata = {\n  title: 'Community Members | YoForex',\n  description: 'Meet the YoForex community. Connect with expert traders, EA developers, and forex enthusiasts from around the world.',\n  keywords: 'forex community, EA developers, trading experts, forex traders',\n  openGraph: {\n    title: 'Community Members | YoForex',\n    description: 'Meet the YoForex community. Connect with expert traders, EA developers, and forex enthusiasts from around the world.',\n    type: 'website',\n    url: '/members',\n  },\n  twitter: {\n    card: 'summary_large_image',\n    title: 'Community Members | YoForex',\n    description: 'Meet the YoForex community. Connect with expert traders, EA developers, and forex enthusiasts from around the world.',\n  },\n};\n\n// Fetch leaderboard data from Express API\nasync function getLeaderboardData() {\n  try {\n    const EXPRESS_URL = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n    \n    // Fetch all three leaderboard types in parallel\n    const [topByCoinsRes, topByContributionsRes, topByUploadsRes] = await Promise.all([\n      fetch(`${EXPRESS_URL}/api/leaderboard?type=coins&limit=50`, {\n        cache: 'no-store',\n      }),\n      fetch(`${EXPRESS_URL}/api/leaderboard?type=contributions&limit=50`, {\n        cache: 'no-store',\n      }),\n      fetch(`${EXPRESS_URL}/api/leaderboard?type=uploads&limit=50`, {\n        cache: 'no-store',\n      }),\n    ]);\n\n    const topByCoins = topByCoinsRes.ok ? await topByCoinsRes.json() : [];\n    const topByContributions = topByContributionsRes.ok ? await topByContributionsRes.json() : [];\n    const topByUploads = topByUploadsRes.ok ? await topByUploadsRes.json() : [];\n\n    return {\n      topByCoins,\n      topByContributions,\n      topByUploads,\n    };\n  } catch (error) {\n    console.error('Error fetching leaderboard data:', error);\n    return {\n      topByCoins: [],\n      topByContributions: [],\n      topByUploads: [],\n    };\n  }\n}\n\nexport default async function MembersPage() {\n  const initialData = await getLeaderboardData();\n\n  return <MembersClient initialData={initialData} />;\n}\n"],"names":[],"mappings":";;;;;;;AACA;;;AAGO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,UAAU;IACV,WAAW;QACT,OAAO;QACP,aAAa;QACb,MAAM;QACN,KAAK;IACP;IACA,SAAS;QACP,MAAM;QACN,OAAO;QACP,aAAa;IACf;AACF;AAEA,0CAA0C;AAC1C,eAAe;IACb,IAAI;QACF,MAAM,cAAc,6DAAuC;QAE3D,gDAAgD;QAChD,MAAM,CAAC,eAAe,uBAAuB,gBAAgB,GAAG,MAAM,QAAQ,GAAG,CAAC;YAChF,MAAM,GAAG,YAAY,oCAAoC,CAAC,EAAE;gBAC1D,OAAO;YACT;YACA,MAAM,GAAG,YAAY,4CAA4C,CAAC,EAAE;gBAClE,OAAO;YACT;YACA,MAAM,GAAG,YAAY,sCAAsC,CAAC,EAAE;gBAC5D,OAAO;YACT;SACD;QAED,MAAM,aAAa,cAAc,EAAE,GAAG,MAAM,cAAc,IAAI,KAAK,EAAE;QACrE,MAAM,qBAAqB,sBAAsB,EAAE,GAAG,MAAM,sBAAsB,IAAI,KAAK,EAAE;QAC7F,MAAM,eAAe,gBAAgB,EAAE,GAAG,MAAM,gBAAgB,IAAI,KAAK,EAAE;QAE3E,OAAO;YACL;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;YACL,YAAY,EAAE;YACd,oBAAoB,EAAE;YACtB,cAAc,EAAE;QAClB;IACF;AACF;AAEe,eAAe;IAC5B,MAAM,cAAc,MAAM;IAE1B,qBAAO,8OAAC,2IAAa;QAAC,aAAa;;;;;;AACrC","debugId":null}}]
}