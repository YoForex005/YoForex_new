{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/content/%5Bslug%5D/ContentDetailClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/content/[slug]/ContentDetailClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/content/[slug]/ContentDetailClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/content/%5Bslug%5D/ContentDetailClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/content/[slug]/ContentDetailClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/content/[slug]/ContentDetailClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/content/%5Bslug%5D/page.tsx"],"sourcesContent":["import { Metadata } from 'next';\nimport ContentDetailClient from './ContentDetailClient';\nimport type { Content, User as UserType, ContentReview } from '@shared/schema';\n\n// Express API base URL\nconst EXPRESS_URL = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n\n// Generate metadata for SEO\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\n  const { slug } = await params;\n  try {\n    // Check if slug is UUID format\n    const isUUID = slug.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i);\n    const endpoint = isUUID \n      ? `${EXPRESS_URL}/api/content/${slug}`\n      : `${EXPRESS_URL}/api/content/slug/${slug}`;\n\n    const res = await fetch(endpoint, { cache: 'no-store' });\n    if (!res.ok) {\n      return {\n        title: 'Content Not Found | YoForex Marketplace',\n      };\n    }\n\n    const content: Content = await res.json();\n    \n    // Get cover image\n    const images = content.images || [];\n    const coverImage = images.find(img => img.isCover) || images[0];\n    \n    // Create description from content description (first 150 chars)\n    const description = content.description \n      ? content.description.substring(0, 150) + (content.description.length > 150 ? '...' : '')\n      : `Download ${content.title} - ${content.type} for MT4/MT5`;\n    \n    // Get tags as keywords\n    const tags = content.tags || [];\n    const keywords = tags.length > 0 ? tags.join(', ') : 'forex, EA, indicator, MT4, MT5';\n\n    return {\n      title: `${content.title} | YoForex Marketplace`,\n      description,\n      keywords,\n      openGraph: {\n        title: content.title,\n        description,\n        images: coverImage?.url ? [{ url: coverImage.url }] : [],\n        type: 'article',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title: content.title,\n        description,\n        images: coverImage?.url ? [coverImage.url] : [],\n      },\n    };\n  } catch (error) {\n    return {\n      title: 'Content Not Found | YoForex Marketplace',\n    };\n  }\n}\n\n// Main page component (Server Component)\nexport default async function ContentDetailPage({ params }: { params: Promise<{ slug: string }> }) {\n  const { slug } = await params;\n  \n  // Check if slug is UUID format\n  const isUUID = slug.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i);\n  const contentEndpoint = isUUID \n    ? `${EXPRESS_URL}/api/content/${slug}`\n    : `${EXPRESS_URL}/api/content/slug/${slug}`;\n\n  // Fetch content with error handling that doesn't trigger Next.js 404\n  let content: Content | null = null;\n  try {\n    const contentRes = await fetch(contentEndpoint, { \n      cache: 'no-store',\n      // Prevent Next.js from treating this as a 404 route\n    });\n    if (contentRes.ok) {\n      content = await contentRes.json();\n    }\n  } catch (error) {\n    // Swallow error - we'll show custom error card\n    content = null;\n  }\n\n  // If content not found, return Client Component with null content to show custom error card\n  if (!content) {\n    return (\n      <ContentDetailClient\n        slug={slug}\n        initialContent={null}\n        initialAuthor={null}\n        initialReviews={[]}\n        initialSimilarContent={[]}\n        initialAuthorReleases={[]}\n      />\n    );\n  }\n\n  // Fetch all additional data in parallel\n  const [authorRes, reviewsRes, similarContentRes, authorReleasesRes] = await Promise.all([\n    // Fetch author\n    content.authorId \n      ? fetch(`${EXPRESS_URL}/api/user/${content.authorId}`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n    \n    // Fetch reviews\n    content.id \n      ? fetch(`${EXPRESS_URL}/api/content/${content.id}/reviews`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n    \n    // Fetch similar content (same category)\n    content.category \n      ? fetch(`${EXPRESS_URL}/api/content?category=${content.category}&limit=5`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n    \n    // Fetch author's other releases\n    content.authorId \n      ? fetch(`${EXPRESS_URL}/api/user/${content.authorId}/content`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n  ]);\n\n  // Parse responses\n  const author = authorRes?.ok ? await authorRes.json() : null;\n  const reviews = reviewsRes?.ok ? await reviewsRes.json() : [];\n  const similarContent = similarContentRes?.ok ? await similarContentRes.json() : [];\n  const authorReleases = authorReleasesRes?.ok ? await authorReleasesRes.json() : [];\n\n  // Pass all data to Client Component\n  return (\n    <ContentDetailClient\n      slug={slug}\n      initialContent={content}\n      initialAuthor={author}\n      initialReviews={reviews}\n      initialSimilarContent={similarContent}\n      initialAuthorReleases={authorReleases}\n    />\n  );\n}\n\n// Enable dynamic rendering with no caching\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 0;\n"],"names":[],"mappings":"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","debugId":null}}]
}