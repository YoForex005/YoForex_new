{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/HomeClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/HomeClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/HomeClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/HomeClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/HomeClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/HomeClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,gCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/lib/api-config.ts"],"sourcesContent":["/**\n * Centralized API Configuration\n * \n * This module provides runtime URL resolution for API calls across the application.\n * It eliminates hardcoded localhost URLs and uses environment variables for flexibility.\n * \n * Architecture:\n * - Development: Next.js (3000) + Express (3001)\n * - Production VPS: NGINX proxy (80/443) ‚Üí Next.js (3000) + Express (3001)\n * - Production Replit: Single Next.js server (5000) with API routes\n */\n\n/**\n * Environment variable validation\n * Ensures required configuration is present at runtime\n * \n * PRODUCTION SAFETY: Throws errors for missing critical variables\n * DEVELOPMENT: Allows fallbacks with warnings\n */\nfunction validateEnv() {\n  const isProduction = process.env.NODE_ENV === 'production';\n\n  if (typeof window === 'undefined') {\n    // Server-side: require EXPRESS_URL in production\n    if (!process.env.EXPRESS_URL) {\n      if (isProduction) {\n        throw new Error(\n          'üö® CRITICAL: EXPRESS_URL environment variable is required in production.\\n' +\n          'Please set it in your .env.production file.\\n' +\n          'Example: EXPRESS_URL=http://127.0.0.1:3001\\n' +\n          'For VPS deployment, see: VPS_DEPLOYMENT_GUIDE.md'\n        );\n      } else {\n        console.warn(\n          '‚ö†Ô∏è  EXPRESS_URL not set, using development fallback: http://127.0.0.1:3001'\n        );\n      }\n    }\n  }\n\n  // NEXT_PUBLIC_SITE_URL is required in production for SEO, OG tags, canonical URLs\n  if (!process.env.NEXT_PUBLIC_SITE_URL) {\n    if (isProduction) {\n      throw new Error(\n        'üö® CRITICAL: NEXT_PUBLIC_SITE_URL environment variable is required in production.\\n' +\n        'Please set it in your .env.production file.\\n' +\n        'Example: NEXT_PUBLIC_SITE_URL=https://yourdomain.com\\n' +\n        'This is used for SEO metadata, Open Graph tags, and canonical URLs.'\n      );\n    } else {\n      console.warn(\n        '‚ö†Ô∏è  NEXT_PUBLIC_SITE_URL not set, using development fallback: http://localhost:3000'\n      );\n    }\n  }\n}\n\n// Run validation on module load\nvalidateEnv();\n\n/**\n * Get the API base URL for client-side requests\n * \n * @returns API base URL accessible from the browser\n * \n * Client-side behavior:\n * - Always returns empty string '' (uses relative URLs)\n * - Next.js rewrites handle /api/* ‚Üí Express server routing\n * - No need for absolute URLs on client-side\n * \n * Server-side behavior:\n * - Returns internal API URL (e.g., http://127.0.0.1:3001)\n * - Used for server-to-server communication\n * \n * Usage in client components:\n * ```typescript\n * const apiUrl = getApiBaseUrl();\n * fetch(`${apiUrl}/api/stats`);  // Becomes: fetch('/api/stats')\n * ```\n */\nexport function getApiBaseUrl(): string {\n  // Client-side: use relative URLs (NGINX/Next.js rewrites handle routing)\n  if (typeof window !== 'undefined') {\n    return '';\n  }\n\n  // Server-side: Use getInternalApiUrl which has production safety checks\n  return getInternalApiUrl();\n}\n\n/**\n * Get the internal API URL for server-side requests\n * \n * @returns Internal API URL for server-to-server communication\n * \n * Usage in server components:\n * ```typescript\n * const apiUrl = getInternalApiUrl();\n * const response = await fetch(`${apiUrl}/api/stats`);\n * ```\n */\nexport function getInternalApiUrl(): string {\n  // Server-side only\n  if (typeof window !== 'undefined') {\n    throw new Error('getInternalApiUrl() can only be called server-side');\n  }\n\n  const isProduction = process.env.NODE_ENV === 'production';\n  const url = process.env.EXPRESS_URL;\n  \n  if (!url) {\n    if (isProduction) {\n      throw new Error(\n        'EXPRESS_URL must be set in production. ' +\n        'This is a critical configuration error that will prevent server-side API calls from working.'\n      );\n    }\n    // Development fallback only\n    const fallback = 'http://127.0.0.1:3001';\n    console.log(`[API Config] Using development fallback: ${fallback}`);\n    return fallback;\n  }\n  \n  console.log(`[API Config] Internal API URL: ${url}`);\n  return url;\n}\n\n/**\n * Get the public site URL\n * \n * @returns Public-facing site URL (for SEO, OG tags, etc.)\n * \n * Usage:\n * ```typescript\n * const siteUrl = getSiteUrl();\n * const canonical = `${siteUrl}/thread/${slug}`;\n * ```\n */\nexport function getSiteUrl(): string {\n  const isProduction = process.env.NODE_ENV === 'production';\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.VERCEL_URL;\n  \n  if (!siteUrl) {\n    if (isProduction) {\n      throw new Error(\n        'NEXT_PUBLIC_SITE_URL must be set in production. ' +\n        'This is required for SEO, canonical URLs, and Open Graph tags.'\n      );\n    }\n    // Development fallback\n    return 'http://localhost:3000';\n  }\n  \n  return siteUrl;\n}\n\n/**\n * Build a full API URL with path\n * \n * @param path - API endpoint path (e.g., '/api/stats')\n * @returns Full API URL\n * \n * Usage:\n * ```typescript\n * const url = buildApiUrl('/api/stats');\n * const response = await fetch(url);\n * ```\n */\nexport function buildApiUrl(path: string): string {\n  const base = getApiBaseUrl();\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  return base ? `${base}${cleanPath}` : cleanPath;\n}\n\n/**\n * Configuration object for easy access\n */\nexport const apiConfig = {\n  /**\n   * API base URL (client or server appropriate)\n   */\n  baseUrl: getApiBaseUrl(),\n\n  /**\n   * Public site URL\n   */\n  siteUrl: getSiteUrl(),\n\n  /**\n   * Whether we're in production mode\n   */\n  isProduction: process.env.NODE_ENV === 'production',\n\n  /**\n   * Whether we're in development mode\n   */\n  isDevelopment: process.env.NODE_ENV === 'development',\n\n  /**\n   * Express API URL (server-side only)\n   */\n  get expressUrl(): string {\n    if (typeof window !== 'undefined') {\n      throw new Error('expressUrl is only available server-side');\n    }\n    return getInternalApiUrl();\n  },\n} as const;\n\n/**\n * Type-safe environment variable access\n * \n * Note: NEXT_PUBLIC_EXPRESS_URL is not included as client-side code\n * uses relative URLs (/api/*) which are handled by Next.js rewrites.\n */\nexport const env = {\n  // Server-side only\n  EXPRESS_URL: process.env.EXPRESS_URL,\n  DATABASE_URL: process.env.DATABASE_URL,\n  SESSION_SECRET: process.env.SESSION_SECRET,\n\n  // Public (client-accessible)\n  NEXT_PUBLIC_SITE_URL: process.env.NEXT_PUBLIC_SITE_URL,\n\n  // Node environment\n  NODE_ENV: process.env.NODE_ENV,\n} as const;\n\n// Export helper for debugging\nexport function debugConfig() {\n  if (typeof window === 'undefined') {\n    console.log('üîß API Configuration (Server-side):');\n    console.log('  - Express URL:', env.EXPRESS_URL || 'NOT SET (using fallback)');\n    console.log('  - Site URL:', getSiteUrl());\n    console.log('  - API Base:', getApiBaseUrl());\n  } else {\n    console.log('üîß API Configuration (Client-side):');\n    console.log('  - Site URL:', env.NEXT_PUBLIC_SITE_URL || 'NOT SET');\n    console.log('  - API Base:', getApiBaseUrl());\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC,GAED;;;;;;CAMC;;;;;;;;;;;;;;;;AACD,SAAS;IACP,MAAM,eAAe,oDAAyB;IAE9C,wCAAmC;QACjC,iDAAiD;QACjD;;IAcF;IAEA,kFAAkF;IAClF;;AAcF;AAEA,gCAAgC;AAChC;AAsBO,SAAS;IACd,yEAAyE;IACzE;;IAIA,wEAAwE;IACxE,OAAO;AACT;AAaO,SAAS;IACd,mBAAmB;IACnB;;IAIA,MAAM,eAAe,oDAAyB;IAC9C,MAAM;IAEN;;IAaA,QAAQ,GAAG,CAAC,CAAC,+BAA+B,EAAE,KAAK;IACnD,OAAO;AACT;AAaO,SAAS;IACd,MAAM,eAAe,oDAAyB;IAC9C,MAAM,UAAU,6DAAoC,QAAQ,GAAG,CAAC,UAAU;IAE1E;;IAWA,OAAO;AACT;AAcO,SAAS,YAAY,IAAY;IACtC,MAAM,OAAO;IACb,MAAM,YAAY,KAAK,UAAU,CAAC,OAAO,OAAO,CAAC,CAAC,EAAE,MAAM;IAC1D,OAAO,OAAO,GAAG,OAAO,WAAW,GAAG;AACxC;AAKO,MAAM,YAAY;IACvB;;GAEC,GACD,SAAS;IAET;;GAEC,GACD,SAAS;IAET;;GAEC,GACD,cAAc,oDAAyB;IAEvC;;GAEC,GACD,eAAe,oDAAyB;IAExC;;GAEC,GACD,IAAI,cAAqB;QACvB;;QAGA,OAAO;IACT;AACF;AAQO,MAAM,MAAM;IACjB,mBAAmB;IACnB,WAAW;IACX,cAAc,QAAQ,GAAG,CAAC,YAAY;IACtC,gBAAgB,QAAQ,GAAG,CAAC,cAAc;IAE1C,6BAA6B;IAC7B,oBAAoB;IAEpB,mBAAmB;IACnB,QAAQ;AACV;AAGO,SAAS;IACd,wCAAmC;QACjC,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,oBAAoB,IAAI,WAAW,IAAI;QACnD,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,QAAQ,GAAG,CAAC,iBAAiB;IAC/B;;AAKF","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/page.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport HomeClient from './HomeClient';\nimport { getInternalApiUrl } from './lib/api-config';\n\n// Enable ISR with 60-second revalidation\nexport const revalidate = 60;\n\n// Homepage metadata\nexport const metadata: Metadata = {\n  title: 'YoForex - Expert Advisor Forum & EA Marketplace',\n  description: 'Join 10,000+ forex traders. Download free EAs, share strategies, and earn coins. #1 MT4/MT5 EA community with verified backtests and live results.',\n  keywords: ['forex forum', 'EA marketplace', 'Expert Advisor', 'MT4', 'MT5', 'forex trading', 'algorithmic trading', 'free EAs', 'trading robots'],\n};\n\nasync function fetchData(url: string) {\n  const apiUrl = getInternalApiUrl();\n  const controller = new AbortController();\n  const timeout = setTimeout(() => controller.abort(), 10000); // 10s timeout\n  \n  try {\n    console.log(`[SSR Fetch] Fetching: ${apiUrl}${url}`);\n    const res = await fetch(`${apiUrl}${url}`, {\n      signal: controller.signal,\n      next: { revalidate: 60 },\n      headers: {\n        'Accept': 'application/json',\n      },\n    });\n    \n    clearTimeout(timeout);\n    \n    if (!res.ok) {\n      console.error(`[SSR Fetch] Failed ${url}: ${res.status}`);\n      return null;\n    }\n    \n    return await res.json();\n  } catch (error) {\n    clearTimeout(timeout);\n    console.error(`[SSR Fetch] Error ${url}:`, error);\n    return null;\n  }\n}\n\nexport default async function HomePage() {\n  // Parallel data fetching from Express API\n  const [stats, categoryTree, threads] = await Promise.all([\n    fetchData('/api/stats'),\n    fetchData('/api/categories/tree/all'),  // Fetch category tree instead of flat list\n    fetchData('/api/threads'),\n  ]);\n\n  return (\n    <HomeClient \n      initialStats={stats}\n      initialCategories={categoryTree}\n      initialThreads={threads}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AACA;AACA;;;;AAGO,MAAM,aAAa;AAGnB,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,UAAU;QAAC;QAAe;QAAkB;QAAkB;QAAO;QAAO;QAAiB;QAAuB;QAAY;KAAiB;AACnJ;AAEA,eAAe,UAAU,GAAW;IAClC,MAAM,SAAS,IAAA,gJAAiB;IAChC,MAAM,aAAa,IAAI;IACvB,MAAM,UAAU,WAAW,IAAM,WAAW,KAAK,IAAI,QAAQ,cAAc;IAE3E,IAAI;QACF,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,SAAS,KAAK;QACnD,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,KAAK,EAAE;YACzC,QAAQ,WAAW,MAAM;YACzB,MAAM;gBAAE,YAAY;YAAG;YACvB,SAAS;gBACP,UAAU;YACZ;QACF;QAEA,aAAa;QAEb,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,QAAQ,KAAK,CAAC,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,IAAI,MAAM,EAAE;YACxD,OAAO;QACT;QAEA,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,aAAa;QACb,QAAQ,KAAK,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,EAAE;QAC3C,OAAO;IACT;AACF;AAEe,eAAe;IAC5B,0CAA0C;IAC1C,MAAM,CAAC,OAAO,cAAc,QAAQ,GAAG,MAAM,QAAQ,GAAG,CAAC;QACvD,UAAU;QACV,UAAU;QACV,UAAU;KACX;IAED,qBACE,8OAAC,6HAAU;QACT,cAAc;QACd,mBAAmB;QACnB,gBAAgB;;;;;;AAGtB","debugId":null}}]
}