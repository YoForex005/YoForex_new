{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2FACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,+CAA+C;AAC/C,2LACA,mBACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WAAW;YACX,aACE;YAEF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,wRACA,mCACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE,6FAA6F;YAC7F,mCAAmC;YACnC;YACF,WAAW;YACX,yGAAyG;YACzG,OAAO;QACT;QACA,4FAA4F;QAC5F,8FAA8F;QAC9F,mDAAmD;QACnD,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/hot/page.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Flame, TrendingUp, Eye, Clock, ArrowLeft, MessageSquare, ShoppingCart, Star, Filter, Users, Award, BarChart3, TrendingDown } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ntype ContentType = 'thread' | 'ea' | 'indicator' | 'article' | 'source_code' | 'broker';\n\ninterface HotItem {\n  id: string;\n  type: ContentType;\n  title: string;\n  slug: string;\n  categorySlug: string;\n  views: number;\n  createdAt: string;\n  normalizedScore: number;\n  author: {\n    id?: string;\n    username?: string;\n    profileImageUrl?: string;\n  };\n  // Type-specific fields\n  replyCount?: number;\n  priceCoins?: number;\n  isFree?: boolean;\n  purchaseCount?: number;\n  reviewCount?: number;\n  overallRating?: number;\n}\n\ninterface HotItemsData {\n  items: HotItem[];\n  lastUpdated: string;\n}\n\nasync function getHotItems(): Promise<HotItemsData> {\n  const apiUrl = process.env.INTERNAL_API_URL || 'http://127.0.0.1:3001';\n  console.log('[API Config] Internal API URL:', apiUrl);\n  const url = `${apiUrl}/api/hot?limit=50`;\n  console.log('[SSR Fetch] Fetching:', url);\n  \n  const res = await fetch(url, {\n    cache: 'no-store',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  if (!res.ok) {\n    throw new Error('Failed to fetch hot items');\n  }\n\n  return res.json();\n}\n\nasync function getPlatformStats() {\n  const apiUrl = process.env.INTERNAL_API_URL || 'http://127.0.0.1:3001';\n  const url = `${apiUrl}/api/stats`;\n  \n  const res = await fetch(url, {\n    cache: 'no-store',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  if (!res.ok) {\n    return { totalThreads: 0, totalMembers: 0, totalPosts: 0, activeToday: 0 };\n  }\n\n  return res.json();\n}\n\nexport const metadata = {\n  title: \"What's Hot - Trending Content | YoForex\",\n  description: \"Discover the hottest trading discussions, EAs, indicators, brokers, and content from the YoForex community.\",\n};\n\nexport default async function HotPage() {\n  const [data, stats] = await Promise.all([\n    getHotItems(),\n    getPlatformStats()\n  ]);\n  \n  const hotItems = data.items || [];\n\n  // Calculate content type breakdown\n  const typeBreakdown = hotItems.reduce((acc, item) => {\n    const key = item.type;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  // Get rank badge style based on position - more subtle with transparency\n  const getRankStyle = (index: number) => {\n    if (index === 0) return \"bg-gradient-to-br from-yellow-500/20 to-orange-600/20 text-foreground border border-orange-300/30 dark:border-orange-600/30\";\n    if (index === 1) return \"bg-gradient-to-br from-gray-400/15 to-gray-600/15 text-foreground border border-gray-300/30 dark:border-gray-600/30\";\n    if (index === 2) return \"bg-gradient-to-br from-amber-600/20 to-amber-800/20 text-foreground border border-amber-300/30 dark:border-amber-600/30\";\n    return \"bg-muted/40 text-foreground border border-border/50\";\n  };\n\n  // Get content type badge and icon\n  const getContentTypeInfo = (type: ContentType) => {\n    switch (type) {\n      case 'thread':\n        return { label: 'Discussion', icon: MessageSquare, color: 'bg-blue-500/15 text-blue-700 dark:text-blue-400 border-blue-300/30 dark:border-blue-600/30' };\n      case 'ea':\n        return { label: 'EA', icon: ShoppingCart, color: 'bg-green-500/15 text-green-700 dark:text-green-400 border-green-300/30 dark:border-green-600/30' };\n      case 'indicator':\n        return { label: 'Indicator', icon: TrendingUp, color: 'bg-purple-500/15 text-purple-700 dark:text-purple-400 border-purple-300/30 dark:border-purple-600/30' };\n      case 'article':\n        return { label: 'Article', icon: Eye, color: 'bg-indigo-500/15 text-indigo-700 dark:text-indigo-400 border-indigo-300/30 dark:border-indigo-600/30' };\n      case 'source_code':\n        return { label: 'Code', icon: ShoppingCart, color: 'bg-cyan-500/15 text-cyan-700 dark:text-cyan-400 border-cyan-300/30 dark:border-cyan-600/30' };\n      case 'broker':\n        return { label: 'Broker', icon: Star, color: 'bg-yellow-500/15 text-yellow-700 dark:text-yellow-400 border-yellow-300/30 dark:border-yellow-600/30' };\n      default:\n        return { label: 'Content', icon: Eye, color: 'bg-gray-500/15 text-gray-700 dark:text-gray-400 border-gray-300/30 dark:border-gray-600/30' };\n    }\n  };\n\n  // Get link URL based on content type\n  const getItemLink = (item: HotItem) => {\n    if (item.type === 'thread') return `/thread/${item.slug}`;\n    if (item.type === 'broker') return `/brokers/${item.slug}`;\n    return `/content/${item.slug}`;\n  };\n\n  // Get trending categories\n  const categoryCount = hotItems.reduce((acc, item) => {\n    acc[item.categorySlug] = (acc[item.categorySlug] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  const trendingCategories = Object.entries(categoryCount)\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 5)\n    .map(([slug, count]) => ({ slug, count }));\n\n  // Get top contributors (by number of hot items)\n  const contributorCount = hotItems.reduce((acc, item) => {\n    if (item.author.username) {\n      acc[item.author.username] = (acc[item.author.username] || 0) + 1;\n    }\n    return acc;\n  }, {} as Record<string, number>);\n\n  const topContributors = Object.entries(contributorCount)\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 5)\n    .map(([username, count]) => ({ username, count }));\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <div className=\"border-b bg-card/50 backdrop-blur-sm sticky top-0 z-10\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between gap-4\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"gap-2\" data-testid=\"button-back-home\">\n                <ArrowLeft className=\"w-4 h-4\" />\n                Back to Home\n              </Button>\n            </Link>\n            \n            <div className=\"flex items-center gap-3\">\n              <Flame className=\"w-6 h-6 text-orange-500/70\" />\n              <h1 className=\"text-2xl font-bold text-foreground\">\n                What's Hot\n              </h1>\n            </div>\n            \n            <div className=\"w-[120px]\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-8\">\n          {/* Main Content - 8 columns */}\n          <div className=\"lg:col-span-8 space-y-6\">\n            {/* Stats Overview Cards */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Card className=\"hover-elevate\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"p-2 rounded-lg bg-orange-500/15\">\n                      <Flame className=\"w-5 h-5 text-orange-600 dark:text-orange-400\" />\n                    </div>\n                    <div>\n                      <p className=\"text-2xl font-bold\">{hotItems.length}</p>\n                      <p className=\"text-xs text-muted-foreground\">Trending Now</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"hover-elevate\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"p-2 rounded-lg bg-blue-500/15\">\n                      <MessageSquare className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n                    </div>\n                    <div>\n                      <p className=\"text-2xl font-bold\">{typeBreakdown.thread || 0}</p>\n                      <p className=\"text-xs text-muted-foreground\">Discussions</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"hover-elevate\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"p-2 rounded-lg bg-green-500/15\">\n                      <ShoppingCart className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                    </div>\n                    <div>\n                      <p className=\"text-2xl font-bold\">\n                        {(typeBreakdown.ea || 0) + (typeBreakdown.indicator || 0) + (typeBreakdown.article || 0) + (typeBreakdown.source_code || 0)}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">Marketplace</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"hover-elevate\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"p-2 rounded-lg bg-yellow-500/15\">\n                      <Star className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400\" />\n                    </div>\n                    <div>\n                      <p className=\"text-2xl font-bold\">{typeBreakdown.broker || 0}</p>\n                      <p className=\"text-xs text-muted-foreground\">Brokers</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Description */}\n            <Card>\n              <CardContent className=\"p-4\">\n                <p className=\"text-muted-foreground text-center\">\n                  <TrendingUp className=\"w-4 h-4 inline mr-2\" />\n                  Trending content from the last 7 days - discussions, marketplace items, and brokers ranked by engagement\n                </p>\n              </CardContent>\n            </Card>\n\n            {/* Hot Items List */}\n            <div className=\"space-y-3\">\n              {hotItems.length === 0 ? (\n                <Card className=\"p-8 text-center\">\n                  <TrendingDown className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                  <p className=\"text-muted-foreground\">No hot content at the moment. Check back soon!</p>\n                </Card>\n              ) : (\n                hotItems.map((item, index) => {\n                  const contentTypeInfo = getContentTypeInfo(item.type);\n                  const Icon = contentTypeInfo.icon;\n                  \n                  return (\n                    <Link key={item.id} href={getItemLink(item)} data-testid={`link-hot-${item.id}`}>\n                      <Card className=\"group hover:border-orange-200/50 dark:hover:border-orange-800/30 hover-elevate active-elevate-2 cursor-pointer transition-all duration-200 overflow-hidden\">\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-orange-500/3 to-red-500/3 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none\" />\n                        \n                        <CardContent className=\"p-4\">\n                          <div className=\"relative flex items-start gap-3\">\n                            <div className={`flex-shrink-0 w-10 h-10 rounded-md flex items-center justify-center text-base font-semibold ${getRankStyle(index)} transition-transform group-hover:scale-105`}>\n                              {index + 1}\n                            </div>\n\n                            <div className=\"flex-1 min-w-0 space-y-2\">\n                              <h3 \n                                className=\"text-lg font-semibold text-foreground line-clamp-2 leading-snug group-hover:text-orange-500/90 dark:group-hover:text-orange-400/80 transition-colors\" \n                                data-testid={`text-hot-title-${item.id}`}\n                              >\n                                {item.title}\n                              </h3>\n                              \n                              <div className=\"flex items-center gap-3 flex-wrap text-sm text-muted-foreground\">\n                                <span className=\"truncate max-w-[150px]\" data-testid={`text-hot-author-${item.id}`}>\n                                  by {item.author?.username || \"Unknown\"}\n                                </span>\n                                <span className=\"text-border\">•</span>\n                                \n                                {item.type === 'thread' && item.replyCount !== undefined && (\n                                  <>\n                                    <div className=\"flex items-center gap-1\">\n                                      <MessageSquare className=\"w-4 h-4\" />\n                                      <span>{item.replyCount} replies</span>\n                                    </div>\n                                    <span className=\"text-border\">•</span>\n                                  </>\n                                )}\n                                \n                                {(item.type === 'ea' || item.type === 'indicator' || item.type === 'article' || item.type === 'source_code') && (\n                                  <>\n                                    {!item.isFree && item.priceCoins && (\n                                      <>\n                                        <div className=\"flex items-center gap-1\">\n                                          <span className=\"text-yellow-600 dark:text-yellow-400 font-semibold\">🪙 {item.priceCoins} coins</span>\n                                        </div>\n                                        <span className=\"text-border\">•</span>\n                                      </>\n                                    )}\n                                    {item.isFree && (\n                                      <>\n                                        <Badge variant=\"secondary\" className=\"text-xs bg-green-500/15 text-green-700 dark:text-green-400\">\n                                          Free\n                                        </Badge>\n                                        <span className=\"text-border\">•</span>\n                                      </>\n                                    )}\n                                  </>\n                                )}\n                                \n                                {item.type === 'broker' && item.overallRating !== undefined && (\n                                  <>\n                                    <div className=\"flex items-center gap-1\">\n                                      <Star className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                                      <span className=\"font-semibold\">{(item.overallRating / 100).toFixed(1)}/5</span>\n                                      <span className=\"text-muted-foreground\">({item.reviewCount} reviews)</span>\n                                    </div>\n                                    <span className=\"text-border\">•</span>\n                                  </>\n                                )}\n                                \n                                <div className=\"flex items-center gap-1\">\n                                  <Eye className=\"w-4 h-4\" />\n                                  <span data-testid={`text-hot-views-${item.id}`}>\n                                    {item.views?.toLocaleString() || 0} views\n                                  </span>\n                                </div>\n                                <span className=\"text-border\">•</span>\n                                <div className=\"flex items-center gap-1\">\n                                  <Clock className=\"w-4 h-4\" />\n                                  <span>{formatDistanceToNow(new Date(item.createdAt), { addSuffix: true })}</span>\n                                </div>\n                              </div>\n                              \n                              <div className=\"flex items-center gap-2 flex-wrap\">\n                                <Badge \n                                  variant=\"outline\" \n                                  className={`text-xs px-2 py-0.5 ${contentTypeInfo.color}`}\n                                >\n                                  <Icon className=\"w-3 h-3 mr-1\" />\n                                  {contentTypeInfo.label}\n                                </Badge>\n                                \n                                <Badge \n                                  variant=\"outline\" \n                                  className=\"text-xs px-2 py-0 bg-muted/50 border-border/50 hover:bg-muted transition-colors\"\n                                >\n                                  {item.categorySlug}\n                                </Badge>\n                              </div>\n                            </div>\n\n                            <div className=\"flex-shrink-0 self-start\">\n                              <Badge \n                                variant=\"secondary\" \n                                className=\"text-xs px-2 py-1 bg-orange-500/15 text-orange-700 dark:text-orange-400 border border-orange-300/30 dark:border-orange-600/30\"\n                              >\n                                <TrendingUp className=\"w-3 h-3 mr-1\" />\n                                Hot\n                              </Badge>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </Link>\n                  );\n                })\n              )}\n            </div>\n\n            {hotItems.length > 0 && (\n              <Card className=\"mt-6\">\n                <CardContent className=\"p-4 text-center text-sm text-muted-foreground\">\n                  Showing {hotItems.length} trending item{hotItems.length !== 1 ? 's' : ''} from the last 7 days\n                </CardContent>\n              </Card>\n            )}\n          </div>\n\n          {/* Right Sidebar - 4 columns */}\n          <aside className=\"lg:col-span-4 space-y-6\">\n            {/* Trending Categories */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg flex items-center gap-2\">\n                  <Filter className=\"w-5 h-5 text-orange-500\" />\n                  Trending Categories\n                </CardTitle>\n                <CardDescription>\n                  Most active categories right now\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                {trendingCategories.length === 0 ? (\n                  <p className=\"text-sm text-muted-foreground text-center py-4\">\n                    No trending categories\n                  </p>\n                ) : (\n                  trendingCategories.map(({ slug, count }) => (\n                    <Link key={slug} href={`/category/${slug}`}>\n                      <div className=\"flex items-center justify-between p-3 rounded-lg bg-muted/40 hover:bg-muted hover-elevate active-elevate-2 cursor-pointer transition-colors\">\n                        <span className=\"text-sm font-medium truncate\">{slug}</span>\n                        <Badge variant=\"secondary\" className=\"ml-2\">\n                          {count}\n                        </Badge>\n                      </div>\n                    </Link>\n                  ))\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Top Contributors */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg flex items-center gap-2\">\n                  <Award className=\"w-5 h-5 text-yellow-500\" />\n                  Top Contributors\n                </CardTitle>\n                <CardDescription>\n                  Most hot items this week\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                {topContributors.length === 0 ? (\n                  <p className=\"text-sm text-muted-foreground text-center py-4\">\n                    No contributors yet\n                  </p>\n                ) : (\n                  topContributors.map(({ username, count }, index) => (\n                    <Link key={username} href={`/profile/${username}`}>\n                      <div className=\"flex items-center justify-between p-3 rounded-lg bg-muted/40 hover:bg-muted hover-elevate active-elevate-2 cursor-pointer transition-colors\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className={`flex-shrink-0 w-7 h-7 rounded-full flex items-center justify-center text-xs font-semibold ${\n                            index === 0 ? 'bg-yellow-500/20 text-yellow-700 dark:text-yellow-400' :\n                            index === 1 ? 'bg-gray-400/20 text-gray-700 dark:text-gray-400' :\n                            index === 2 ? 'bg-amber-600/20 text-amber-700 dark:text-amber-400' :\n                            'bg-muted/60 text-muted-foreground'\n                          }`}>\n                            {index + 1}\n                          </div>\n                          <span className=\"text-sm font-medium truncate\">{username}</span>\n                        </div>\n                        <Badge variant=\"secondary\" className=\"ml-2\">\n                          {count}\n                        </Badge>\n                      </div>\n                    </Link>\n                  ))\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Platform Stats */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg flex items-center gap-2\">\n                  <BarChart3 className=\"w-5 h-5 text-blue-500\" />\n                  Platform Stats\n                </CardTitle>\n                <CardDescription>\n                  Overall activity\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-muted/40\">\n                  <div className=\"flex items-center gap-2\">\n                    <MessageSquare className=\"w-4 h-4 text-blue-500\" />\n                    <span className=\"text-sm\">Total Threads</span>\n                  </div>\n                  <span className=\"font-semibold\">{stats.totalThreads?.toLocaleString()}</span>\n                </div>\n                \n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-muted/40\">\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"w-4 h-4 text-green-500\" />\n                    <span className=\"text-sm\">Community Members</span>\n                  </div>\n                  <span className=\"font-semibold\">{stats.totalMembers?.toLocaleString()}</span>\n                </div>\n                \n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-muted/40\">\n                  <div className=\"flex items-center gap-2\">\n                    <TrendingUp className=\"w-4 h-4 text-purple-500\" />\n                    <span className=\"text-sm\">Total Replies</span>\n                  </div>\n                  <span className=\"font-semibold\">{stats.totalPosts?.toLocaleString()}</span>\n                </div>\n                \n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-muted/40\">\n                  <div className=\"flex items-center gap-2\">\n                    <Flame className=\"w-4 h-4 text-orange-500\" />\n                    <span className=\"text-sm\">Active Today</span>\n                  </div>\n                  <span className=\"font-semibold\">{stats.activeToday?.toLocaleString()}</span>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Info Card */}\n            <Card className=\"bg-gradient-to-br from-orange-500/10 to-red-500/10 border-orange-300/30 dark:border-orange-600/30\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-start gap-3\">\n                  <Flame className=\"w-5 h-5 text-orange-500 flex-shrink-0 mt-0.5\" />\n                  <div className=\"space-y-1\">\n                    <h4 className=\"font-semibold text-sm\">How It Works</h4>\n                    <p className=\"text-xs text-muted-foreground leading-relaxed\">\n                      Content is ranked by engagement over the last 7 days. This includes forum discussions, marketplace items, and broker reviews - all competing fairly for your attention!\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </aside>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}