{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/user/%5Busername%5D/UserProfileClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/user/[username]/UserProfileClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/user/[username]/UserProfileClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6S,GAC1U,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/user/%5Busername%5D/UserProfileClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/user/[username]/UserProfileClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/user/[username]/UserProfileClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/user/%5Busername%5D/page.tsx"],"sourcesContent":["import { Metadata } from 'next';\nimport UserProfileClient from './UserProfileClient';\nimport type { User, Badge as BadgeType, Content, ForumThread } from '@shared/schema';\n\n// Express API base URL\nconst EXPRESS_URL = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n\n// Generate metadata for SEO\nexport async function generateMetadata({ params }: { params: { username: string } }): Promise<Metadata> {\n  try {\n    const res = await fetch(`${EXPRESS_URL}/api/users/username/${params.username}`, { cache: 'no-store' });\n    if (!res.ok) {\n      return {\n        title: 'User Not Found | YoForex Community',\n      };\n    }\n\n    const user: User = await res.json();\n    \n    return {\n      title: `${user.username}'s Profile | YoForex Community`,\n      description: `View ${user.username}'s profile, badges, contributions, and reputation on YoForex`,\n      keywords: `forex trader, ${user.username}, MT4, MT5, expert advisor`,\n      openGraph: {\n        title: `${user.username}'s Profile`,\n        description: `View ${user.username}'s profile, badges, contributions, and reputation on YoForex`,\n        type: 'profile',\n      },\n      twitter: {\n        card: 'summary',\n        title: `${user.username}'s Profile`,\n        description: `View ${user.username}'s profile, badges, contributions, and reputation on YoForex`,\n      },\n    };\n  } catch (error) {\n    return {\n      title: 'User Not Found | YoForex Community',\n    };\n  }\n}\n\n// Main page component (Server Component)\nexport default async function UserProfilePage({ params }: { params: { username: string } }) {\n  // Fetch user with error handling that doesn't trigger Next.js 404\n  let user: User | null = null;\n  try {\n    const userRes = await fetch(`${EXPRESS_URL}/api/users/username/${params.username}`, { \n      cache: 'no-store',\n    });\n    if (userRes.ok) {\n      user = await userRes.json();\n    }\n  } catch (error) {\n    // Swallow error - we'll show custom error card\n    user = null;\n  }\n\n  // If user not found, return Client Component with null user to show custom error card\n  if (!user) {\n    return (\n      <UserProfileClient\n        username={params.username}\n        initialUser={null}\n        initialBadges={[]}\n        initialContent={[]}\n        initialThreads={[]}\n      />\n    );\n  }\n\n  // Fetch all additional data in parallel\n  const [badgesRes, contentRes, threadsRes] = await Promise.all([\n    // Fetch user badges\n    user.id \n      ? fetch(`${EXPRESS_URL}/api/users/${user.id}/badges`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n    \n    // Fetch user's content (EAs/Indicators)\n    user.id \n      ? fetch(`${EXPRESS_URL}/api/user/${user.id}/content`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n    \n    // Fetch user's threads\n    user.id \n      ? fetch(`${EXPRESS_URL}/api/user/${user.id}/threads`, { cache: 'no-store' }).catch(() => null)\n      : Promise.resolve(null),\n  ]);\n\n  // Parse responses\n  const badges = badgesRes?.ok ? await badgesRes.json() : [];\n  const content = contentRes?.ok ? await contentRes.json() : [];\n  const threads = threadsRes?.ok ? await threadsRes.json() : [];\n\n  // Pass all data to Client Component\n  return (\n    <UserProfileClient\n      username={params.username}\n      initialUser={user}\n      initialBadges={badges}\n      initialContent={content}\n      initialThreads={threads}\n    />\n  );\n}\n\n// Enable dynamic rendering with no caching\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 0;\n"],"names":[],"mappings":";;;;;;;;;;;AACA;;;AAGA,uBAAuB;AACvB,MAAM,cAAc,6DAAuC;AAGpD,eAAe,iBAAiB,EAAE,MAAM,EAAoC;IACjF,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,GAAG,YAAY,oBAAoB,EAAE,OAAO,QAAQ,EAAE,EAAE;YAAE,OAAO;QAAW;QACpG,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,OAAO;gBACL,OAAO;YACT;QACF;QAEA,MAAM,OAAa,MAAM,IAAI,IAAI;QAEjC,OAAO;YACL,OAAO,GAAG,KAAK,QAAQ,CAAC,8BAA8B,CAAC;YACvD,aAAa,CAAC,KAAK,EAAE,KAAK,QAAQ,CAAC,4DAA4D,CAAC;YAChG,UAAU,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,0BAA0B,CAAC;YACpE,WAAW;gBACT,OAAO,GAAG,KAAK,QAAQ,CAAC,UAAU,CAAC;gBACnC,aAAa,CAAC,KAAK,EAAE,KAAK,QAAQ,CAAC,4DAA4D,CAAC;gBAChG,MAAM;YACR;YACA,SAAS;gBACP,MAAM;gBACN,OAAO,GAAG,KAAK,QAAQ,CAAC,UAAU,CAAC;gBACnC,aAAa,CAAC,KAAK,EAAE,KAAK,QAAQ,CAAC,4DAA4D,CAAC;YAClG;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,OAAO;QACT;IACF;AACF;AAGe,eAAe,gBAAgB,EAAE,MAAM,EAAoC;IACxF,kEAAkE;IAClE,IAAI,OAAoB;IACxB,IAAI;QACF,MAAM,UAAU,MAAM,MAAM,GAAG,YAAY,oBAAoB,EAAE,OAAO,QAAQ,EAAE,EAAE;YAClF,OAAO;QACT;QACA,IAAI,QAAQ,EAAE,EAAE;YACd,OAAO,MAAM,QAAQ,IAAI;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,+CAA+C;QAC/C,OAAO;IACT;IAEA,sFAAsF;IACtF,IAAI,CAAC,MAAM;QACT,qBACE,8OAAC,4JAAiB;YAChB,UAAU,OAAO,QAAQ;YACzB,aAAa;YACb,eAAe,EAAE;YACjB,gBAAgB,EAAE;YAClB,gBAAgB,EAAE;;;;;;IAGxB;IAEA,wCAAwC;IACxC,MAAM,CAAC,WAAW,YAAY,WAAW,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC5D,oBAAoB;QACpB,KAAK,EAAE,GACH,MAAM,GAAG,YAAY,WAAW,EAAE,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE;YAAE,OAAO;QAAW,GAAG,KAAK,CAAC,IAAM,QACvF,QAAQ,OAAO,CAAC;QAEpB,wCAAwC;QACxC,KAAK,EAAE,GACH,MAAM,GAAG,YAAY,UAAU,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;YAAE,OAAO;QAAW,GAAG,KAAK,CAAC,IAAM,QACvF,QAAQ,OAAO,CAAC;QAEpB,uBAAuB;QACvB,KAAK,EAAE,GACH,MAAM,GAAG,YAAY,UAAU,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;YAAE,OAAO;QAAW,GAAG,KAAK,CAAC,IAAM,QACvF,QAAQ,OAAO,CAAC;KACrB;IAED,kBAAkB;IAClB,MAAM,SAAS,WAAW,KAAK,MAAM,UAAU,IAAI,KAAK,EAAE;IAC1D,MAAM,UAAU,YAAY,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE;IAC7D,MAAM,UAAU,YAAY,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE;IAE7D,oCAAoC;IACpC,qBACE,8OAAC,4JAAiB;QAChB,UAAU,OAAO,QAAQ;QACzB,aAAa;QACb,eAAe;QACf,gBAAgB;QAChB,gBAAgB;;;;;;AAGtB;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa","debugId":null}}]
}