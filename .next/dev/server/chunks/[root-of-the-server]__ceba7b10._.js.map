{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/shared/schema.ts"],"sourcesContent":["import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, boolean, index, jsonb, json, check, uniqueIndex, numeric, serial, date } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table - REQUIRED for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => ({\n    expireIdx: index(\"IDX_session_expire\").on(table.expire),\n  }),\n);\n\n// User storage table - Merged Replit Auth + YoForex fields\nexport const users = pgTable(\"users\", {\n  // Core identity field (NEVER change this type - breaking change)\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  \n  // Legacy fields (kept for backward compatibility, will be deprecated)\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\"), // Now optional - Replit Auth handles authentication\n  \n  // Replit Auth fields (added for OIDC integration)\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  location: varchar(\"location\", { length: 100 }),\n  \n  // YoForex-specific fields (preserved from original)\n  totalCoins: integer(\"total_coins\").notNull().default(0),\n  weeklyEarned: integer(\"weekly_earned\").notNull().default(0),\n  rank: integer(\"rank\"),\n  youtubeUrl: text(\"youtube_url\"),\n  instagramHandle: text(\"instagram_handle\"),\n  telegramHandle: text(\"telegram_handle\"),\n  myfxbookLink: text(\"myfxbook_link\"),\n  investorId: text(\"investor_id\"),\n  investorPassword: text(\"investor_password\"),\n  isVerifiedTrader: boolean(\"is_verified_trader\").notNull().default(false),\n  emailNotifications: boolean(\"email_notifications\").notNull().default(true),\n  hasYoutubeReward: boolean(\"has_youtube_reward\").notNull().default(false),\n  hasMyfxbookReward: boolean(\"has_myfxbook_reward\").notNull().default(false),\n  hasInvestorReward: boolean(\"has_investor_reward\").notNull().default(false),\n  \n  // Badges & Achievements\n  badges: text(\"badges\").array().default(sql`'{}'::text[]`),\n  \n  // Onboarding System\n  onboardingCompleted: boolean(\"onboarding_completed\").default(false),\n  onboardingDismissed: boolean(\"onboarding_dismissed\").default(false),\n  onboardingProgress: json(\"onboarding_progress\").default({\n    profilePicture: false,  // 10 coins - Upload profile picture\n    firstReply: false,       // 5 coins - Post first reply\n    twoReviews: false,       // 6 coins - Submit 2 reviews\n    firstThread: false,      // 10 coins - Create first thread\n    firstPublish: false,     // 30 coins - Publish EA/content\n    fiftyFollowers: false,   // 200 coins - Get 50 followers\n  }),\n  \n  // Ranking system\n  reputationScore: integer(\"reputation_score\").notNull().default(0),\n  lastReputationUpdate: timestamp(\"last_reputation_update\"),\n  \n  // Daily Earning system\n  lastJournalPost: date(\"last_journal_post\"),\n  \n  // Timestamps\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n}, (table) => ({\n  usernameIdx: index(\"idx_users_username\").on(table.username),\n  emailIdx: index(\"idx_users_email\").on(table.email),\n  reputationIdx: index(\"idx_users_reputation\").on(table.reputationScore),\n  coinsCheck: check(\"chk_user_coins_nonnegative\", sql`${table.totalCoins} >= 0`),\n}));\n\nexport const userActivity = pgTable(\"user_activity\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  date: date(\"date\").notNull(),\n  activeMinutes: integer(\"active_minutes\").notNull().default(0),\n  coinsEarned: integer(\"coins_earned\").notNull().default(0),\n  lastActivityAt: timestamp(\"last_activity_at\").defaultNow(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => ({\n  userDateIdx: uniqueIndex(\"idx_user_activity_user_date\").on(table.userId, table.date),\n}));\n\nexport const coinTransactions = pgTable(\"coin_transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull().$type<\"earn\" | \"spend\" | \"recharge\">(),\n  amount: integer(\"amount\").notNull(),\n  description: text(\"description\").notNull(),\n  status: text(\"status\").notNull().$type<\"completed\" | \"pending\" | \"failed\">().default(\"completed\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_coin_transactions_user_id\").on(table.userId),\n}));\n\nexport const rechargeOrders = pgTable(\"recharge_orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  coinAmount: integer(\"coin_amount\").notNull(),\n  priceUsd: integer(\"price_usd\").notNull(),\n  paymentMethod: text(\"payment_method\").notNull().$type<\"stripe\" | \"crypto\">(),\n  paymentId: text(\"payment_id\"),\n  status: text(\"status\").notNull().$type<\"pending\" | \"completed\" | \"failed\">().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n}, (table) => ({\n  userIdIdx: index(\"idx_recharge_orders_user_id\").on(table.userId),\n}));\n\nexport const withdrawalRequests = pgTable(\"withdrawal_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  amount: integer(\"amount\").notNull(),\n  cryptoType: text(\"crypto_type\").notNull().$type<\"BTC\" | \"ETH\">(),\n  walletAddress: text(\"wallet_address\").notNull(),\n  status: text(\"status\").notNull().$type<\"pending\" | \"processing\" | \"completed\" | \"failed\" | \"cancelled\">().default(\"pending\"),\n  exchangeRate: numeric(\"exchange_rate\", { precision: 20, scale: 8 }).notNull(),\n  cryptoAmount: numeric(\"crypto_amount\", { precision: 20, scale: 8 }).notNull(),\n  processingFee: integer(\"processing_fee\").notNull(),\n  transactionHash: text(\"transaction_hash\"),\n  adminNotes: text(\"admin_notes\"),\n  requestedAt: timestamp(\"requested_at\").notNull().defaultNow(),\n  processedAt: timestamp(\"processed_at\"),\n  completedAt: timestamp(\"completed_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_withdrawal_requests_user_id\").on(table.userId),\n  statusIdx: index(\"idx_withdrawal_requests_status\").on(table.status),\n  amountCheck: check(\"chk_withdrawal_amount_min\", sql`${table.amount} >= 1000`),\n}));\n\nexport const feedback = pgTable(\"feedback\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  type: text(\"type\").notNull().$type<\"bug\" | \"feature\" | \"improvement\" | \"other\">(),\n  subject: text(\"subject\").notNull(),\n  message: text(\"message\").notNull(),\n  email: text(\"email\"),\n  status: text(\"status\").notNull().$type<\"new\" | \"in_progress\" | \"resolved\" | \"closed\">().default(\"new\"),\n  priority: text(\"priority\").$type<\"low\" | \"medium\" | \"high\" | \"urgent\">().default(\"medium\"),\n  adminNotes: text(\"admin_notes\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_feedback_user_id\").on(table.userId),\n  statusIdx: index(\"idx_feedback_status\").on(table.status),\n  typeIdx: index(\"idx_feedback_type\").on(table.type),\n}));\n\nexport const content = pgTable(\"content\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  authorId: varchar(\"author_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull().$type<\"ea\" | \"indicator\" | \"article\" | \"source_code\">(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  priceCoins: integer(\"price_coins\").notNull().default(0),\n  isFree: boolean(\"is_free\").notNull().default(true),\n  category: text(\"category\").notNull(),\n  \n  // Publishing flow fields\n  platform: text(\"platform\").$type<\"MT4\" | \"MT5\" | \"Both\">(),\n  version: text(\"version\"),\n  tags: text(\"tags\").array(),\n  files: jsonb(\"files\").$type<Array<{name: string; size: number; url: string; checksum: string}>>(),\n  images: jsonb(\"images\").$type<Array<{url: string; isCover: boolean; order: number}>>(),\n  \n  // Optional fields\n  brokerCompat: text(\"broker_compat\").array(),\n  minDeposit: integer(\"min_deposit\"),\n  hedging: boolean(\"hedging\"),\n  changelog: text(\"changelog\"),\n  license: text(\"license\"),\n  \n  // Evidence fields (for Performance Reports)\n  equityCurveImage: text(\"equity_curve_image\"),\n  profitFactor: integer(\"profit_factor\"),\n  drawdownPercent: integer(\"drawdown_percent\"),\n  winPercent: integer(\"win_percent\"),\n  broker: text(\"broker\"),\n  monthsTested: integer(\"months_tested\"),\n  \n  // Legacy fields\n  fileUrl: text(\"file_url\"),\n  imageUrl: text(\"image_url\"),\n  imageUrls: text(\"image_urls\").array(),\n  postLogoUrl: text(\"post_logo_url\"),\n  views: integer(\"views\").notNull().default(0),\n  downloads: integer(\"downloads\").notNull().default(0),\n  likes: integer(\"likes\").notNull().default(0),\n  isFeatured: boolean(\"is_featured\").notNull().default(false),\n  averageRating: integer(\"average_rating\"),\n  reviewCount: integer(\"review_count\").notNull().default(0),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  slug: text(\"slug\").notNull().unique(),\n  focusKeyword: text(\"focus_keyword\"),\n  autoMetaDescription: text(\"auto_meta_description\"),\n  autoImageAltTexts: text(\"auto_image_alt_texts\").array(),\n  \n  // Ranking system\n  salesScore: integer(\"sales_score\").notNull().default(0),\n  lastSalesUpdate: timestamp(\"last_sales_update\"),\n  \n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  authorIdIdx: index(\"idx_content_author_id\").on(table.authorId),\n  statusIdx: index(\"idx_content_status\").on(table.status),\n  categoryIdx: index(\"idx_content_category\").on(table.category),\n  slugIdx: index(\"idx_content_slug\").on(table.slug),\n  salesScoreIdx: index(\"idx_content_sales_score\").on(table.salesScore),\n}));\n\nexport const contentPurchases = pgTable(\"content_purchases\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  buyerId: varchar(\"buyer_id\").notNull().references(() => users.id),\n  sellerId: varchar(\"seller_id\").notNull().references(() => users.id),\n  priceCoins: integer(\"price_coins\").notNull(),\n  transactionId: varchar(\"transaction_id\").notNull().references(() => coinTransactions.id),\n  purchasedAt: timestamp(\"purchased_at\").notNull().defaultNow(),\n}, (table) => ({\n  buyerIdIdx: index(\"idx_content_purchases_user_id\").on(table.buyerId),\n  contentIdIdx: index(\"idx_content_purchases_content_id\").on(table.contentId),\n}));\n\nexport const contentReviews = pgTable(\"content_reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  rating: integer(\"rating\").notNull(),\n  review: text(\"review\").notNull(),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  rewardGiven: boolean(\"reward_given\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  uniqueContentUserReview: uniqueIndex(\"idx_content_reviews_unique_content_user\").on(table.contentId, table.userId),\n}));\n\nexport const contentLikes = pgTable(\"content_likes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_content_likes_user_id\").on(table.userId),\n  uniqueContentUserLike: uniqueIndex(\"idx_content_likes_unique_content_user\").on(table.contentId, table.userId),\n}));\n\nexport const contentReplies = pgTable(\"content_replies\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  contentId: varchar(\"content_id\").notNull().references(() => content.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  parentId: varchar(\"parent_id\").references((): any => contentReplies.id),\n  body: text(\"body\").notNull(),\n  rating: integer(\"rating\"),\n  imageUrls: text(\"image_urls\").array(),\n  helpful: integer(\"helpful\").notNull().default(0),\n  isVerified: boolean(\"is_verified\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n});\n\nexport const brokers = pgTable(\"brokers\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  websiteUrl: text(\"website_url\"),\n  logoUrl: text(\"logo_url\"),\n  yearFounded: integer(\"year_founded\"),\n  regulation: text(\"regulation\"),\n  regulationSummary: text(\"regulation_summary\"),\n  platform: text(\"platform\"),\n  spreadType: text(\"spread_type\"),\n  minSpread: numeric(\"min_spread\", { precision: 10, scale: 2 }),\n  overallRating: integer(\"overall_rating\").default(0),\n  reviewCount: integer(\"review_count\").notNull().default(0),\n  scamReportCount: integer(\"scam_report_count\").notNull().default(0),\n  isVerified: boolean(\"is_verified\").notNull().default(false),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  slugIdx: index(\"idx_brokers_slug\").on(table.slug),\n  statusIdx: index(\"idx_brokers_status\").on(table.status),\n  regulationIdx: index(\"idx_brokers_regulation\").on(table.regulation),\n  platformIdx: index(\"idx_brokers_platform\").on(table.platform),\n}));\n\nexport const brokerReviews = pgTable(\"broker_reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  brokerId: varchar(\"broker_id\").notNull().references(() => brokers.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  rating: integer(\"rating\").notNull(),\n  reviewTitle: text(\"review_title\").notNull(),\n  reviewBody: text(\"review_body\").notNull(),\n  isScamReport: boolean(\"is_scam_report\").notNull().default(false),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"pending\"),\n  datePosted: timestamp(\"date_posted\").notNull().defaultNow(),\n}, (table) => ({\n  brokerIdIdx: index(\"idx_broker_reviews_broker_id\").on(table.brokerId),\n  uniqueBrokerUserReview: uniqueIndex(\"idx_broker_reviews_unique_broker_user\").on(table.brokerId, table.userId),\n}));\n\nexport const userFollows = pgTable(\"user_follows\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  followerId: varchar(\"follower_id\").notNull().references(() => users.id),\n  followingId: varchar(\"following_id\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  followerIdIdx: index(\"idx_user_follows_follower_id\").on(table.followerId),\n  uniqueFollowerFollowing: uniqueIndex(\"idx_user_follows_unique_follower_following\").on(table.followerId, table.followingId),\n}));\n\nexport const conversations = pgTable(\"conversations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  participant1Id: varchar(\"participant1_id\").notNull().references(() => users.id),\n  participant2Id: varchar(\"participant2_id\").notNull().references(() => users.id),\n  lastMessageAt: timestamp(\"last_message_at\").notNull().defaultNow(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n});\n\nexport const messages = pgTable(\"messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  conversationId: varchar(\"conversation_id\").notNull().references(() => conversations.id),\n  senderId: varchar(\"sender_id\").notNull().references(() => users.id),\n  recipientId: varchar(\"recipient_id\").notNull().references(() => users.id),\n  body: text(\"body\").notNull(),\n  isRead: boolean(\"is_read\").notNull().default(false),\n  deliveredAt: timestamp(\"delivered_at\"),\n  readAt: timestamp(\"read_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  conversationIdIdx: index(\"idx_messages_conversation_id\").on(table.conversationId),\n  senderIdIdx: index(\"idx_messages_sender_id\").on(table.senderId),\n  recipientIdIdx: index(\"idx_messages_recipient_id\").on(table.recipientId),\n  createdAtIdx: index(\"idx_messages_created_at\").on(table.createdAt),\n  isReadIdx: index(\"idx_messages_is_read\").on(table.isRead),\n}));\n\n// Message Reactions\nexport const messageReactions = pgTable(\"message_reactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  messageId: varchar(\"message_id\").notNull().references(() => messages.id, { onDelete: \"cascade\" }),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  emoji: varchar(\"emoji\", { length: 10 }).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n}, (table) => ({\n  messageUserIdx: index(\"message_reactions_msg_user_idx\").on(table.messageId, table.userId),\n}));\n\n// Notifications system\nexport const notifications = pgTable(\"notifications\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  type: text(\"type\").notNull().$type<\"reply\" | \"like\" | \"follow\" | \"purchase\" | \"badge\" | \"system\">(),\n  title: text(\"title\").notNull(),\n  message: text(\"message\").notNull(),\n  actionUrl: text(\"action_url\"),\n  isRead: boolean(\"is_read\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_notifications_user_id\").on(table.userId),\n  isReadIdx: index(\"idx_notifications_is_read\").on(table.isRead),\n  createdAtIdx: index(\"idx_notifications_created_at\").on(table.createdAt),\n}));\n\n// Forum Threads (separate from marketplace content)\nexport const forumThreads = pgTable(\"forum_threads\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  authorId: varchar(\"author_id\").notNull().references(() => users.id),\n  categorySlug: text(\"category_slug\").notNull(),\n  subcategorySlug: text(\"subcategory_slug\"), // Sub-category if applicable\n  title: text(\"title\").notNull(),\n  body: text(\"body\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  focusKeyword: text(\"focus_keyword\"),\n  metaDescription: text(\"meta_description\"),\n  \n  // Enhanced SEO & Thread Type\n  threadType: text(\"thread_type\").notNull().$type<\"question\" | \"discussion\" | \"review\" | \"journal\" | \"guide\" | \"program_sharing\">().default(\"discussion\"),\n  seoExcerpt: text(\"seo_excerpt\"), // 120-160 chars, optional\n  primaryKeyword: text(\"primary_keyword\"), // 1-6 words, optional\n  language: text(\"language\").notNull().default(\"en\"),\n  \n  // Trading Metadata (stored as arrays for multi-select)\n  instruments: text(\"instruments\").array().default(sql`'{}'::text[]`), // XAUUSD, EURUSD, etc.\n  timeframes: text(\"timeframes\").array().default(sql`'{}'::text[]`), // M1, M5, H1, etc.\n  strategies: text(\"strategies\").array().default(sql`'{}'::text[]`), // scalping, swing, etc.\n  platform: text(\"platform\"), // MT4, MT5, cTrader, TradingView, Other\n  broker: text(\"broker\"), // Free text broker name\n  riskNote: text(\"risk_note\"), // Optional risk management note\n  hashtags: text(\"hashtags\").array().default(sql`'{}'::text[]`), // Social hashtags\n  \n  // Review-specific fields (only for threadType=review)\n  reviewTarget: text(\"review_target\"), // EA/Indicator/Broker name\n  reviewVersion: text(\"review_version\"),\n  reviewRating: integer(\"review_rating\"), // 1-5 stars\n  reviewPros: text(\"review_pros\").array(),\n  reviewCons: text(\"review_cons\").array(),\n  \n  // Question-specific fields (only for threadType=question)\n  questionSummary: text(\"question_summary\"), // \"What do you want solved?\"\n  acceptedAnswerId: varchar(\"accepted_answer_id\"), // Reference to accepted reply\n  \n  // Attachments\n  attachmentUrls: text(\"attachment_urls\").array().default(sql`'{}'::text[]`),\n  \n  // Status & Moderation\n  isPinned: boolean(\"is_pinned\").notNull().default(false),\n  isLocked: boolean(\"is_locked\").notNull().default(false),\n  isSolved: boolean(\"is_solved\").notNull().default(false),\n  views: integer(\"views\").notNull().default(0),\n  replyCount: integer(\"reply_count\").notNull().default(0),\n  likeCount: integer(\"like_count\").notNull().default(0),\n  bookmarkCount: integer(\"bookmark_count\").notNull().default(0),\n  shareCount: integer(\"share_count\").notNull().default(0),\n  lastActivityAt: timestamp(\"last_activity_at\").notNull().defaultNow(),\n  status: text(\"status\").notNull().$type<\"pending\" | \"approved\" | \"rejected\">().default(\"approved\"),\n  \n  // Ranking system\n  engagementScore: integer(\"engagement_score\").notNull().default(0),\n  lastScoreUpdate: timestamp(\"last_score_update\"),\n  \n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  categorySlugIdx: index(\"idx_forum_threads_category\").on(table.categorySlug),\n  subcategorySlugIdx: index(\"idx_forum_threads_subcategory\").on(table.subcategorySlug),\n  threadTypeIdx: index(\"idx_forum_threads_type\").on(table.threadType),\n  statusIdx: index(\"idx_forum_threads_status\").on(table.status),\n  isPinnedIdx: index(\"idx_forum_threads_pinned\").on(table.isPinned),\n  engagementScoreIdx: index(\"idx_forum_threads_engagement\").on(table.engagementScore),\n  lastActivityAtIdx: index(\"idx_forum_threads_last_activity\").on(table.lastActivityAt),\n  slugIdx: index(\"idx_forum_threads_slug\").on(table.slug),\n}));\n\n// Forum Thread Replies (with SEO for each reply)\nexport const forumReplies = pgTable(\"forum_replies\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  threadId: varchar(\"thread_id\").notNull().references(() => forumThreads.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  parentId: varchar(\"parent_id\").references((): any => forumReplies.id),\n  body: text(\"body\").notNull(),\n  slug: text(\"slug\").notNull().unique(), // SEO: Each reply gets unique slug for Google indexing\n  metaDescription: text(\"meta_description\"), // SEO: Auto-generated from body\n  imageUrls: text(\"image_urls\").array(),\n  helpful: integer(\"helpful\").notNull().default(0),\n  isAccepted: boolean(\"is_accepted\").notNull().default(false),\n  isVerified: boolean(\"is_verified\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  threadIdIdx: index(\"idx_forum_replies_thread_id\").on(table.threadId),\n  createdAtIdx: index(\"idx_forum_replies_created_at\").on(table.createdAt),\n  slugIdx: index(\"idx_forum_replies_slug\").on(table.slug),\n}));\n\n// Forum Categories with dynamic stats and hierarchical support\nexport const forumCategories = pgTable(\"forum_categories\", {\n  slug: text(\"slug\").primaryKey(),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull(), // Icon name from lucide-react\n  color: text(\"color\").notNull().default(\"bg-primary\"),\n  parentSlug: text(\"parent_slug\"), // For subcategories: references parent category slug\n  threadCount: integer(\"thread_count\").notNull().default(0),\n  postCount: integer(\"post_count\").notNull().default(0),\n  sortOrder: integer(\"sort_order\").notNull().default(0),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  parentSlugIdx: index(\"idx_forum_categories_parent_slug\").on(table.parentSlug),\n}));\n\n// User Badges & Trust Levels\nexport const userBadges = pgTable(\"user_badges\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  badgeType: text(\"badge_type\").notNull().$type<\"verified_trader\" | \"top_contributor\" | \"ea_expert\" | \"helpful_member\" | \"early_adopter\">(),\n  awardedAt: timestamp(\"awarded_at\").notNull().defaultNow(),\n});\n\n// Activity Feed for real-time updates\nexport const activityFeed = pgTable(\"activity_feed\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  activityType: text(\"activity_type\").notNull().$type<\"thread_created\" | \"reply_posted\" | \"content_published\" | \"purchase_made\" | \"review_posted\" | \"badge_earned\">(),\n  entityType: text(\"entity_type\").notNull().$type<\"thread\" | \"reply\" | \"content\" | \"purchase\" | \"review\" | \"badge\">(),\n  entityId: varchar(\"entity_id\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_activity_feed_user_id\").on(table.userId),\n}));\n\n// Double-Entry Ledger Tables (Immutable Accounting System)\n\n// User Wallet - One row per user\nexport const userWallet = pgTable(\"user_wallet\", {\n  walletId: varchar(\"wallet_id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  balance: integer(\"balance\").notNull().default(0),\n  availableBalance: integer(\"available_balance\").notNull().default(0),\n  status: text(\"status\").notNull().default(\"active\"),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: uniqueIndex(\"idx_user_wallet_user_id\").on(table.userId),\n  statusIdx: index(\"idx_user_wallet_status\").on(table.status),\n}));\n\n// Coin Ledger Transactions - Header for grouped entries\nexport const coinLedgerTransactions = pgTable(\"coin_ledger_transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  type: text(\"type\").notNull(),\n  context: json(\"context\").$type<Record<string, any>>(),\n  externalRef: text(\"external_ref\"),\n  initiatorUserId: varchar(\"initiator_user_id\").references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  closedAt: timestamp(\"closed_at\"),\n  status: text(\"status\").notNull().default(\"pending\"),\n}, (table) => ({\n  typeIdx: index(\"idx_ledger_tx_type\").on(table.type),\n  statusIdx: index(\"idx_ledger_tx_status\").on(table.status),\n  initiatorIdx: index(\"idx_ledger_tx_initiator\").on(table.initiatorUserId),\n}));\n\n// Coin Journal Entries - Immutable debit/credit entries\nexport const coinJournalEntries = pgTable(\"coin_journal_entries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  ledgerTransactionId: varchar(\"ledger_transaction_id\").notNull()\n    .references(() => coinLedgerTransactions.id),\n  walletId: varchar(\"wallet_id\").notNull().references(() => userWallet.walletId),\n  direction: text(\"direction\").notNull(),\n  amount: integer(\"amount\").notNull(),\n  balanceBefore: integer(\"balance_before\").notNull(),\n  balanceAfter: integer(\"balance_after\").notNull(),\n  memo: text(\"memo\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  ledgerTxIdx: index(\"idx_journal_ledger_tx\").on(table.ledgerTransactionId),\n  walletIdx: index(\"idx_journal_wallet\").on(table.walletId),\n  createdAtIdx: index(\"idx_journal_created_at\").on(table.createdAt),\n  amountCheck: check(\"chk_amount_positive\", sql`${table.amount} > 0`),\n}));\n\n// Ledger Reconciliation Runs - Audit trail\nexport const ledgerReconciliationRuns = pgTable(\"ledger_reconciliation_runs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  status: text(\"status\").notNull(),\n  driftCount: integer(\"drift_count\").notNull().default(0),\n  maxDelta: integer(\"max_delta\").notNull().default(0),\n  report: json(\"report\").$type<Record<string, any>>(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  completedAt: timestamp(\"completed_at\"),\n});\n\n// Dashboard Preferences - User customization\nexport const dashboardPreferences = pgTable(\"dashboard_preferences\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id).unique(),\n  widgetOrder: text(\"widget_order\").array().notNull(),\n  enabledWidgets: text(\"enabled_widgets\").array().notNull(),\n  layoutType: text(\"layout_type\").notNull().$type<\"default\" | \"compact\" | \"comfortable\">().default(\"default\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_dashboard_preferences_user_id\").on(table.userId),\n}));\n\n// Daily Activity Tracking - To enforce daily limits\nexport const dailyActivityLimits = pgTable(\"daily_activity_limits\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  activityDate: timestamp(\"activity_date\").notNull().defaultNow(),\n  repliesCount: integer(\"replies_count\").notNull().default(0),\n  reportsCount: integer(\"reports_count\").notNull().default(0),\n  backtestsCount: integer(\"backtests_count\").notNull().default(0),\n  lastCheckinAt: timestamp(\"last_checkin_at\"),\n  consecutiveDays: integer(\"consecutive_days\").notNull().default(0),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userDateIdx: uniqueIndex(\"idx_daily_activity_user_date\").on(table.userId, table.activityDate),\n  userIdIdx: index(\"idx_daily_activity_user_id\").on(table.userId),\n}));\n\n// Referral System - Track referrals and commissions\nexport const referrals = pgTable(\"referrals\", {\n  id: serial(\"id\").primaryKey(),\n  referrerId: varchar(\"referrer_id\").notNull().references(() => users.id),\n  referredUserId: varchar(\"referred_user_id\").notNull().references(() => users.id),\n  referralCode: varchar(\"referral_code\", { length: 50 }).notNull().unique(),\n  status: varchar(\"status\", { length: 20 }).notNull().default(\"active\"),\n  totalEarnings: integer(\"total_earnings\").notNull().default(0),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  referrerIdx: index(\"idx_referrals_referrer_id\").on(table.referrerId),\n  referredIdx: uniqueIndex(\"idx_referrals_referred_user_id\").on(table.referredUserId),\n  referralCodeIdx: index(\"idx_referrals_code\").on(table.referralCode),\n}));\n\n// Goals table\nexport const goals = pgTable(\"goals\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  goalType: varchar(\"goal_type\", { length: 50 }).notNull(),\n  targetValue: integer(\"target_value\").notNull(),\n  currentValue: integer(\"current_value\").notNull().default(0),\n  startDate: timestamp(\"start_date\").notNull(),\n  endDate: timestamp(\"end_date\").notNull(),\n  status: varchar(\"status\", { length: 20 }).notNull().default(\"active\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_goals_user_id\").on(table.userId),\n}));\n\n// Achievements table\nexport const achievements = pgTable(\"achievements\", {\n  id: serial(\"id\").primaryKey(),\n  slug: varchar(\"slug\", { length: 100 }).notNull().unique(),\n  name: varchar(\"name\", { length: 200 }).notNull(),\n  description: text(\"description\").notNull(),\n  icon: varchar(\"icon\", { length: 50 }).notNull(),\n  requirement: integer(\"requirement\").notNull(),\n  category: varchar(\"category\", { length: 50 }).notNull(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  slugIdx: index(\"idx_achievements_slug\").on(table.slug),\n}));\n\n// User Achievements table\nexport const userAchievements = pgTable(\"user_achievements\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  achievementId: integer(\"achievement_id\").notNull().references(() => achievements.id),\n  progress: integer(\"progress\").notNull().default(0),\n  unlockedAt: timestamp(\"unlocked_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_user_achievements_user_id\").on(table.userId),\n  achievementIdIdx: index(\"idx_user_achievements_achievement_id\").on(table.achievementId),\n}));\n\n// Campaigns table\nexport const campaigns = pgTable(\"campaigns\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  name: varchar(\"name\", { length: 200 }).notNull(),\n  type: varchar(\"type\", { length: 50 }).notNull(),\n  status: varchar(\"status\", { length: 20 }).notNull().default(\"active\"),\n  discountPercent: integer(\"discount_percent\"),\n  discountCode: varchar(\"discount_code\", { length: 50 }).unique(),\n  startDate: timestamp(\"start_date\").notNull(),\n  endDate: timestamp(\"end_date\").notNull(),\n  uses: integer(\"uses\").notNull().default(0),\n  revenue: integer(\"revenue\").notNull().default(0),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_campaigns_user_id\").on(table.userId),\n  discountCodeIdx: index(\"idx_campaigns_discount_code\").on(table.discountCode),\n}));\n\n// Dashboard Settings table\nexport const dashboardSettings = pgTable(\"dashboard_settings\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id).unique(),\n  layout: json(\"layout\"),\n  theme: varchar(\"theme\", { length: 20 }).default(\"light\"),\n  autoRefresh: boolean(\"auto_refresh\").default(true),\n  refreshInterval: integer(\"refresh_interval\").default(30),\n  favorites: json(\"favorites\"),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: uniqueIndex(\"idx_dashboard_settings_user_id\").on(table.userId),\n}));\n\n// Profiles table\nexport const profiles = pgTable(\"profiles\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id).unique(),\n  coverPhoto: text(\"cover_photo\"),\n  bio: text(\"bio\"),\n  tradingLevel: varchar(\"trading_level\", { length: 50 }),\n  tradingStyle: json(\"trading_style\"),\n  tradingPlatform: json(\"trading_platform\"),\n  tradingSince: date(\"trading_since\"),\n  specialties: json(\"specialties\"),\n  telegram: varchar(\"telegram\", { length: 100 }),\n  discord: varchar(\"discord\", { length: 100 }),\n  twitter: varchar(\"twitter\", { length: 100 }),\n  youtube: varchar(\"youtube\", { length: 200 }),\n  tradingview: varchar(\"tradingview\", { length: 200 }),\n  website: varchar(\"website\", { length: 200 }),\n  profileLayout: varchar(\"profile_layout\", { length: 20 }).default(\"professional\"),\n  customSlug: varchar(\"custom_slug\", { length: 100 }).unique(),\n  isPublic: boolean(\"is_public\").default(true),\n  isPremium: boolean(\"is_premium\").default(false),\n  brandColors: json(\"brand_colors\"),\n  showRevenue: boolean(\"show_revenue\").default(true),\n  showSales: boolean(\"show_sales\").default(true),\n  showFollowers: boolean(\"show_followers\").default(true),\n  showActivity: boolean(\"show_activity\").default(true),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: uniqueIndex(\"idx_profiles_user_id\").on(table.userId),\n  customSlugIdx: index(\"idx_profiles_custom_slug\").on(table.customSlug),\n}));\n\n// User Settings table\nexport const userSettings = pgTable(\"user_settings\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id).unique(),\n  notificationPreferences: json(\"notification_preferences\"),\n  privacySettings: json(\"privacy_settings\"),\n  displaySettings: json(\"display_settings\"),\n  communicationSettings: json(\"communication_settings\"),\n  publishingDefaults: json(\"publishing_defaults\"),\n  advancedSettings: json(\"advanced_settings\"),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: uniqueIndex(\"idx_user_settings_user_id\").on(table.userId),\n}));\n\n// ============================================================================\n// ADMIN DASHBOARD TABLES (20 tables for ultimate admin experience)\n// ============================================================================\n\n// 1. Admin Actions - Log all admin operations\nexport const adminActions = pgTable(\"admin_actions\", {\n  id: serial(\"id\").primaryKey(),\n  adminId: varchar(\"admin_id\").notNull().references(() => users.id),\n  actionType: varchar(\"action_type\").notNull(),\n  targetType: varchar(\"target_type\").notNull(),\n  targetId: varchar(\"target_id\"),\n  details: jsonb(\"details\"),\n  ipAddress: varchar(\"ip_address\"),\n  userAgent: varchar(\"user_agent\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  adminIdIdx: index(\"idx_admin_actions_admin_id\").on(table.adminId),\n  actionTypeIdx: index(\"idx_admin_actions_action_type\").on(table.actionType),\n  targetTypeIdx: index(\"idx_admin_actions_target_type\").on(table.targetType),\n  createdAtIdx: index(\"idx_admin_actions_created_at\").on(table.createdAt),\n}));\n\n// 2. Moderation Queue - Content pending review\nexport const moderationQueue = pgTable(\"moderation_queue\", {\n  id: serial(\"id\").primaryKey(),\n  contentType: varchar(\"content_type\").notNull(),\n  contentId: varchar(\"content_id\").notNull(),\n  authorId: varchar(\"author_id\").notNull().references(() => users.id),\n  status: varchar(\"status\").notNull().default(\"pending\"),\n  priorityScore: integer(\"priority_score\").notNull().default(0),\n  spamScore: numeric(\"spam_score\", { precision: 3, scale: 2 }),\n  sentimentScore: numeric(\"sentiment_score\", { precision: 3, scale: 2 }),\n  flaggedReasons: text(\"flagged_reasons\").array().default(sql`'{}'::text[]`),\n  reviewedBy: varchar(\"reviewed_by\").references(() => users.id),\n  reviewedAt: timestamp(\"reviewed_at\"),\n  reviewNotes: text(\"review_notes\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  statusIdx: index(\"idx_moderation_queue_status\").on(table.status),\n  priorityScoreIdx: index(\"idx_moderation_queue_priority_score\").on(table.priorityScore),\n  createdAtIdx: index(\"idx_moderation_queue_created_at\").on(table.createdAt),\n}));\n\n// 3. Reported Content - User-reported violations\nexport const reportedContent = pgTable(\"reported_content\", {\n  id: serial(\"id\").primaryKey(),\n  reporterId: varchar(\"reporter_id\").notNull().references(() => users.id),\n  contentType: varchar(\"content_type\").notNull(),\n  contentId: varchar(\"content_id\").notNull(),\n  reportReason: varchar(\"report_reason\").notNull(),\n  description: text(\"description\").notNull(),\n  status: varchar(\"status\").notNull().default(\"pending\"),\n  assignedTo: varchar(\"assigned_to\").references(() => users.id),\n  resolution: text(\"resolution\"),\n  actionTaken: varchar(\"action_taken\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  resolvedAt: timestamp(\"resolved_at\"),\n}, (table) => ({\n  statusIdx: index(\"idx_reported_content_status\").on(table.status),\n  contentTypeIdx: index(\"idx_reported_content_content_type\").on(table.contentType),\n  reporterIdIdx: index(\"idx_reported_content_reporter_id\").on(table.reporterId),\n  createdAtIdx: index(\"idx_reported_content_created_at\").on(table.createdAt),\n}));\n\n// 4. System Settings - Platform configuration\nexport const systemSettings = pgTable(\"system_settings\", {\n  id: serial(\"id\").primaryKey(),\n  settingKey: varchar(\"setting_key\").notNull().unique(),\n  settingValue: jsonb(\"setting_value\").notNull(),\n  category: varchar(\"category\").notNull(),\n  description: text(\"description\"),\n  updatedBy: varchar(\"updated_by\").references(() => users.id),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  settingKeyIdx: index(\"idx_system_settings_setting_key\").on(table.settingKey),\n  categoryIdx: index(\"idx_system_settings_category\").on(table.category),\n}));\n\n// 5. Support Tickets - Customer support system\nexport const supportTickets = pgTable(\"support_tickets\", {\n  id: serial(\"id\").primaryKey(),\n  ticketNumber: varchar(\"ticket_number\").notNull().unique(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  subject: varchar(\"subject\").notNull(),\n  description: text(\"description\").notNull(),\n  status: varchar(\"status\").notNull().default(\"open\"),\n  priority: varchar(\"priority\").notNull().default(\"medium\"),\n  category: varchar(\"category\").notNull(),\n  assignedTo: varchar(\"assigned_to\").references(() => users.id),\n  replies: jsonb(\"replies\").array().default(sql`'{}'::jsonb[]`),\n  tags: text(\"tags\").array().default(sql`'{}'::text[]`),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n  resolvedAt: timestamp(\"resolved_at\"),\n}, (table) => ({\n  statusIdx: index(\"idx_support_tickets_status\").on(table.status),\n  priorityIdx: index(\"idx_support_tickets_priority\").on(table.priority),\n  userIdIdx: index(\"idx_support_tickets_user_id\").on(table.userId),\n  assignedToIdx: index(\"idx_support_tickets_assigned_to\").on(table.assignedTo),\n  createdAtIdx: index(\"idx_support_tickets_created_at\").on(table.createdAt),\n}));\n\n// 6. Announcements - Platform-wide announcements\nexport const announcements = pgTable(\"announcements\", {\n  id: serial(\"id\").primaryKey(),\n  title: varchar(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  type: varchar(\"type\").notNull().default(\"info\"),\n  targetAudience: varchar(\"target_audience\").notNull().default(\"all\"),\n  segmentId: integer(\"segment_id\"),\n  displayType: varchar(\"display_type\").notNull().default(\"banner\"),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  startDate: timestamp(\"start_date\").notNull(),\n  endDate: timestamp(\"end_date\"),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  views: integer(\"views\").notNull().default(0),\n  clicks: integer(\"clicks\").notNull().default(0),\n}, (table) => ({\n  isActiveIdx: index(\"idx_announcements_is_active\").on(table.isActive),\n  targetAudienceIdx: index(\"idx_announcements_target_audience\").on(table.targetAudience),\n  startDateIdx: index(\"idx_announcements_start_date\").on(table.startDate),\n  endDateIdx: index(\"idx_announcements_end_date\").on(table.endDate),\n}));\n\n// 7. IP Bans - IP address banning\nexport const ipBans = pgTable(\"ip_bans\", {\n  id: serial(\"id\").primaryKey(),\n  ipAddress: varchar(\"ip_address\").notNull().unique(),\n  reason: text(\"reason\").notNull(),\n  banType: varchar(\"ban_type\").notNull().default(\"permanent\"),\n  expiresAt: timestamp(\"expires_at\"),\n  bannedBy: varchar(\"banned_by\").notNull().references(() => users.id),\n  bannedAt: timestamp(\"banned_at\").notNull().defaultNow(),\n  isActive: boolean(\"is_active\").notNull().default(true),\n}, (table) => ({\n  ipAddressIdx: index(\"idx_ip_bans_ip_address\").on(table.ipAddress),\n  isActiveIdx: index(\"idx_ip_bans_is_active\").on(table.isActive),\n  expiresAtIdx: index(\"idx_ip_bans_expires_at\").on(table.expiresAt),\n}));\n\n// 8. Email Templates - Email template management\nexport const emailTemplates = pgTable(\"email_templates\", {\n  id: serial(\"id\").primaryKey(),\n  templateKey: varchar(\"template_key\").notNull().unique(),\n  subject: varchar(\"subject\").notNull(),\n  htmlBody: text(\"html_body\").notNull(),\n  textBody: text(\"text_body\").notNull(),\n  variables: text(\"variables\").array().default(sql`'{}'::text[]`),\n  category: varchar(\"category\").notNull(),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  updatedBy: varchar(\"updated_by\").references(() => users.id),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  templateKeyIdx: index(\"idx_email_templates_template_key\").on(table.templateKey),\n  categoryIdx: index(\"idx_email_templates_category\").on(table.category),\n  isActiveIdx: index(\"idx_email_templates_is_active\").on(table.isActive),\n}));\n\n// 9. Admin Roles - Admin permission system\nexport const adminRoles = pgTable(\"admin_roles\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id).unique(),\n  role: varchar(\"role\").notNull(),\n  permissions: jsonb(\"permissions\").notNull(),\n  grantedBy: varchar(\"granted_by\").notNull().references(() => users.id),\n  grantedAt: timestamp(\"granted_at\").notNull().defaultNow(),\n}, (table) => ({\n  userIdIdx: index(\"idx_admin_roles_user_id\").on(table.userId),\n  roleIdx: index(\"idx_admin_roles_role\").on(table.role),\n}));\n\n// 10. User Segments - User segmentation for targeting\nexport const userSegments = pgTable(\"user_segments\", {\n  id: serial(\"id\").primaryKey(),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  rules: jsonb(\"rules\").notNull(),\n  userCount: integer(\"user_count\").notNull().default(0),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  nameIdx: index(\"idx_user_segments_name\").on(table.name),\n  createdAtIdx: index(\"idx_user_segments_created_at\").on(table.createdAt),\n}));\n\n// 11. Automation Rules - Automation workflows\nexport const automationRules = pgTable(\"automation_rules\", {\n  id: serial(\"id\").primaryKey(),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  triggerType: varchar(\"trigger_type\").notNull(),\n  triggerConfig: jsonb(\"trigger_config\").notNull(),\n  actionType: varchar(\"action_type\").notNull(),\n  actionConfig: jsonb(\"action_config\").notNull(),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  executionCount: integer(\"execution_count\").notNull().default(0),\n  lastExecuted: timestamp(\"last_executed\"),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  triggerTypeIdx: index(\"idx_automation_rules_trigger_type\").on(table.triggerType),\n  isActiveIdx: index(\"idx_automation_rules_is_active\").on(table.isActive),\n  createdAtIdx: index(\"idx_automation_rules_created_at\").on(table.createdAt),\n}));\n\n// 12. A/B Tests - A/B testing experiments\nexport const abTests = pgTable(\"ab_tests\", {\n  id: serial(\"id\").primaryKey(),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  variants: jsonb(\"variants\").array().default(sql`'{}'::jsonb[]`),\n  trafficAllocation: jsonb(\"traffic_allocation\").notNull(),\n  status: varchar(\"status\").notNull().default(\"draft\"),\n  startDate: timestamp(\"start_date\"),\n  endDate: timestamp(\"end_date\"),\n  winnerVariant: varchar(\"winner_variant\"),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  statusIdx: index(\"idx_ab_tests_status\").on(table.status),\n  startDateIdx: index(\"idx_ab_tests_start_date\").on(table.startDate),\n  endDateIdx: index(\"idx_ab_tests_end_date\").on(table.endDate),\n}));\n\n// 13. Feature Flags - Feature toggle system\nexport const featureFlags = pgTable(\"feature_flags\", {\n  id: serial(\"id\").primaryKey(),\n  flagKey: varchar(\"flag_key\").notNull().unique(),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  isEnabled: boolean(\"is_enabled\").notNull().default(false),\n  rolloutPercentage: integer(\"rollout_percentage\").notNull().default(0),\n  targetUsers: text(\"target_users\").array().default(sql`'{}'::text[]`),\n  targetSegments: integer(\"target_segments\").array().default(sql`'{}'::integer[]`),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n}, (table) => ({\n  flagKeyIdx: index(\"idx_feature_flags_flag_key\").on(table.flagKey),\n  isEnabledIdx: index(\"idx_feature_flags_is_enabled\").on(table.isEnabled),\n}));\n\n// 14. API Keys - API key management\nexport const apiKeys = pgTable(\"api_keys\", {\n  id: serial(\"id\").primaryKey(),\n  key: varchar(\"key\").notNull().unique(),\n  name: varchar(\"name\").notNull(),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  permissions: text(\"permissions\").array().default(sql`'{}'::text[]`),\n  rateLimit: integer(\"rate_limit\").notNull().default(60),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  lastUsed: timestamp(\"last_used\"),\n  expiresAt: timestamp(\"expires_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  keyIdx: index(\"idx_api_keys_key\").on(table.key),\n  userIdIdx: index(\"idx_api_keys_user_id\").on(table.userId),\n  isActiveIdx: index(\"idx_api_keys_is_active\").on(table.isActive),\n}));\n\n// 15. Webhooks - Webhook configurations\nexport const webhooks = pgTable(\"webhooks\", {\n  id: serial(\"id\").primaryKey(),\n  url: varchar(\"url\").notNull(),\n  events: text(\"events\").array().default(sql`'{}'::text[]`),\n  secret: varchar(\"secret\").notNull(),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  lastTriggered: timestamp(\"last_triggered\"),\n  successCount: integer(\"success_count\").notNull().default(0),\n  failureCount: integer(\"failure_count\").notNull().default(0),\n}, (table) => ({\n  isActiveIdx: index(\"idx_webhooks_is_active\").on(table.isActive),\n  createdAtIdx: index(\"idx_webhooks_created_at\").on(table.createdAt),\n}));\n\n// 16. Scheduled Jobs - Cron job management\nexport const scheduledJobs = pgTable(\"scheduled_jobs\", {\n  id: serial(\"id\").primaryKey(),\n  jobKey: varchar(\"job_key\").notNull().unique(),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  schedule: varchar(\"schedule\").notNull(),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  lastRun: timestamp(\"last_run\"),\n  nextRun: timestamp(\"next_run\"),\n  lastStatus: varchar(\"last_status\"),\n  lastError: text(\"last_error\"),\n  executionCount: integer(\"execution_count\").notNull().default(0),\n}, (table) => ({\n  jobKeyIdx: index(\"idx_scheduled_jobs_job_key\").on(table.jobKey),\n  isActiveIdx: index(\"idx_scheduled_jobs_is_active\").on(table.isActive),\n  nextRunIdx: index(\"idx_scheduled_jobs_next_run\").on(table.nextRun),\n}));\n\n// 17. Performance Metrics - Performance tracking\nexport const performanceMetrics = pgTable(\"performance_metrics\", {\n  id: serial(\"id\").primaryKey(),\n  metricType: varchar(\"metric_type\").notNull(),\n  metricName: varchar(\"metric_name\").notNull(),\n  value: numeric(\"value\", { precision: 10, scale: 2 }).notNull(),\n  unit: varchar(\"unit\").notNull(),\n  metadata: jsonb(\"metadata\"),\n  recordedAt: timestamp(\"recorded_at\").notNull().defaultNow(),\n}, (table) => ({\n  metricTypeIdx: index(\"idx_performance_metrics_metric_type\").on(table.metricType),\n  metricNameIdx: index(\"idx_performance_metrics_metric_name\").on(table.metricName),\n  recordedAtIdx: index(\"idx_performance_metrics_recorded_at\").on(table.recordedAt),\n}));\n\n// 18. Security Events - Security event logging\nexport const securityEvents = pgTable(\"security_events\", {\n  id: serial(\"id\").primaryKey(),\n  eventType: varchar(\"event_type\").notNull(),\n  severity: varchar(\"severity\").notNull(),\n  userId: varchar(\"user_id\").references(() => users.id),\n  ipAddress: varchar(\"ip_address\").notNull(),\n  details: jsonb(\"details\").notNull(),\n  isResolved: boolean(\"is_resolved\").notNull().default(false),\n  resolvedBy: varchar(\"resolved_by\").references(() => users.id),\n  resolvedAt: timestamp(\"resolved_at\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  eventTypeIdx: index(\"idx_security_events_event_type\").on(table.eventType),\n  severityIdx: index(\"idx_security_events_severity\").on(table.severity),\n  isResolvedIdx: index(\"idx_security_events_is_resolved\").on(table.isResolved),\n  createdAtIdx: index(\"idx_security_events_created_at\").on(table.createdAt),\n}));\n\n// 19. Media Library - Central media storage\nexport const mediaLibrary = pgTable(\"media_library\", {\n  id: serial(\"id\").primaryKey(),\n  filename: varchar(\"filename\").notNull(),\n  originalFilename: varchar(\"original_filename\").notNull(),\n  filePath: varchar(\"file_path\").notNull(),\n  fileSize: integer(\"file_size\").notNull(),\n  mimeType: varchar(\"mime_type\").notNull(),\n  width: integer(\"width\"),\n  height: integer(\"height\"),\n  altText: varchar(\"alt_text\"),\n  tags: text(\"tags\").array().default(sql`'{}'::text[]`),\n  uploadedBy: varchar(\"uploaded_by\").notNull().references(() => users.id),\n  uploadedAt: timestamp(\"uploaded_at\").notNull().defaultNow(),\n  usageCount: integer(\"usage_count\").notNull().default(0),\n}, (table) => ({\n  uploadedByIdx: index(\"idx_media_library_uploaded_by\").on(table.uploadedBy),\n  mimeTypeIdx: index(\"idx_media_library_mime_type\").on(table.mimeType),\n  uploadedAtIdx: index(\"idx_media_library_uploaded_at\").on(table.uploadedAt),\n}));\n\n// 20. Content Revisions - Version control for content\nexport const contentRevisions = pgTable(\"content_revisions\", {\n  id: serial(\"id\").primaryKey(),\n  contentType: varchar(\"content_type\").notNull(),\n  contentId: varchar(\"content_id\").notNull(),\n  revisionNumber: integer(\"revision_number\").notNull(),\n  data: jsonb(\"data\").notNull(),\n  changedFields: text(\"changed_fields\").array().default(sql`'{}'::text[]`),\n  changedBy: varchar(\"changed_by\").notNull().references(() => users.id),\n  changeReason: text(\"change_reason\"),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n}, (table) => ({\n  contentTypeIdx: index(\"idx_content_revisions_content_type\").on(table.contentType),\n  contentIdIdx: index(\"idx_content_revisions_content_id\").on(table.contentId),\n  revisionNumberIdx: index(\"idx_content_revisions_revision_number\").on(table.revisionNumber),\n  createdAtIdx: index(\"idx_content_revisions_created_at\").on(table.createdAt),\n}));\n\n// Upsert User schema for Replit Auth (OIDC)\nexport const upsertUserSchema = createInsertSchema(users).pick({\n  id: true,\n  email: true,\n  username: true,\n  firstName: true,\n  lastName: true,\n  profileImageUrl: true,\n});\n\nexport type UpsertUser = z.infer<typeof upsertUserSchema>;\n\n// Insert User schema for traditional auth (username/password)\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  totalCoins: true,\n  weeklyEarned: true,\n  rank: true,\n  youtubeUrl: true,\n  instagramHandle: true,\n  telegramHandle: true,\n  myfxbookLink: true,\n  investorId: true,\n  investorPassword: true,\n  isVerifiedTrader: true,\n  emailNotifications: true,\n  hasYoutubeReward: true,\n  hasMyfxbookReward: true,\n  hasInvestorReward: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  username: z.string().min(3).max(50),\n  password: z.string().min(8),\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport const insertCoinTransactionSchema = createInsertSchema(coinTransactions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertRechargeOrderSchema = createInsertSchema(rechargeOrders).omit({\n  id: true,\n  createdAt: true,\n  completedAt: true,\n});\n\nexport const insertWithdrawalRequestSchema = createInsertSchema(withdrawalRequests).omit({\n  id: true,\n  requestedAt: true,\n  processedAt: true,\n  completedAt: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  amount: z.number().min(1000, \"Minimum withdrawal is 1000 coins\"),\n  cryptoType: z.enum([\"BTC\", \"ETH\"]),\n  walletAddress: z.string().min(26, \"Invalid wallet address\").max(100, \"Invalid wallet address\"),\n});\n\nexport const insertFeedbackSchema = createInsertSchema(feedback).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  status: true,\n  priority: true,\n  adminNotes: true,\n});\nexport type InsertFeedback = z.infer<typeof insertFeedbackSchema>;\nexport type Feedback = typeof feedback.$inferSelect;\n\nexport const insertContentSchema = createInsertSchema(content).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  views: true,\n  downloads: true,\n  likes: true,\n  status: true,\n}).extend({\n  title: z.string().min(10).max(120),\n  description: z.string().min(300),\n  priceCoins: z.number().min(0).max(10000),\n  platform: z.enum([\"MT4\", \"MT5\", \"Both\"]).optional(),\n  version: z.string().optional(),\n  tags: z.array(z.string()).max(8).optional(),\n  files: z.array(z.object({\n    name: z.string(),\n    size: z.number(),\n    url: z.string(),\n    checksum: z.string(),\n  })).min(1, \"At least 1 file is required\").optional(),\n  images: z.array(z.object({\n    url: z.string(),\n    isCover: z.boolean(),\n    order: z.number(),\n  })).min(1, \"At least 1 image is required\").optional(),\n  brokerCompat: z.array(z.string()).optional(),\n  minDeposit: z.number().optional(),\n  hedging: z.boolean().optional(),\n  changelog: z.string().optional(),\n  license: z.string().optional(),\n  // Evidence fields (conditionally required based on tags)\n  equityCurveImage: z.string().optional(),\n  profitFactor: z.number().optional(),\n  drawdownPercent: z.number().optional(),\n  winPercent: z.number().optional(),\n  broker: z.string().optional(),\n  monthsTested: z.number().optional(),\n  \n  // Auto-generated SEO fields (optional, can be provided or generated)\n  slug: z.string().optional(),\n  focusKeyword: z.string().optional(),\n  autoMetaDescription: z.string().optional(),\n  autoImageAltTexts: z.array(z.string()).optional(),\n});\n\nexport const insertContentPurchaseSchema = createInsertSchema(contentPurchases).omit({\n  id: true,\n  purchasedAt: true,\n  sellerId: true,\n  transactionId: true,\n  priceCoins: true,\n});\n\nexport const insertContentReviewSchema = createInsertSchema(contentReviews).omit({\n  id: true,\n  createdAt: true,\n  status: true,\n  rewardGiven: true,\n}).extend({\n  rating: z.number().min(1).max(5),\n  review: z.string().min(50).max(1000),\n});\n\nexport const insertContentLikeSchema = createInsertSchema(contentLikes).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertContentReplySchema = createInsertSchema(contentReplies).omit({\n  id: true,\n  createdAt: true,\n  helpful: true,\n  isVerified: true,\n}).extend({\n  body: z.string().min(10).max(5000),\n  rating: z.number().min(1).max(5).optional(),\n});\n\nexport const insertBrokerSchema = createInsertSchema(brokers).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  overallRating: true,\n  reviewCount: true,\n  scamReportCount: true,\n  status: true,\n  isVerified: true,\n});\n\nexport const insertBrokerReviewSchema = createInsertSchema(brokerReviews).omit({\n  id: true,\n  datePosted: true,\n  status: true,\n}).extend({\n  rating: z.number().min(1).max(5),\n  reviewTitle: z.string().min(10).max(200),\n  reviewBody: z.string().min(100).max(2000),\n});\n\nexport const insertUserFollowSchema = createInsertSchema(userFollows).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertConversationSchema = createInsertSchema(conversations).omit({\n  id: true,\n  createdAt: true,\n  lastMessageAt: true,\n});\n\nexport const insertMessageSchema = createInsertSchema(messages).omit({\n  id: true,\n  createdAt: true,\n}).extend({\n  body: z.string().min(1).max(5000),\n});\n\nexport const insertNotificationSchema = createInsertSchema(notifications).omit({\n  id: true,\n  createdAt: true,\n  isRead: true,\n}).extend({\n  title: z.string().min(1).max(200),\n  message: z.string().min(1).max(500),\n});\n\nexport const updateUserProfileSchema = z.object({\n  displayName: z.string().min(2).max(50).optional(),\n  email: z.string().email().optional(),\n  bio: z.string().max(500).optional().or(z.literal(\"\")),\n  location: z.string().max(100).optional().or(z.literal(\"\")),\n  website: z.string().url().optional().or(z.literal(\"\")),\n  youtubeUrl: z.string().url().optional().or(z.literal(\"\")),\n  instagramHandle: z.string().min(1).max(50).optional().or(z.literal(\"\")),\n  telegramHandle: z.string().min(1).max(50).optional().or(z.literal(\"\")),\n  myfxbookLink: z.string().url().optional().or(z.literal(\"\")),\n  investorId: z.string().optional().or(z.literal(\"\")),\n  investorPassword: z.string().optional().or(z.literal(\"\")),\n  emailNotifications: z.boolean().optional(),\n});\n\n// User types already defined above near upsertUserSchema\nexport type CoinTransaction = typeof coinTransactions.$inferSelect;\nexport type InsertCoinTransaction = z.infer<typeof insertCoinTransactionSchema>;\nexport type RechargeOrder = typeof rechargeOrders.$inferSelect;\nexport type InsertRechargeOrder = z.infer<typeof insertRechargeOrderSchema>;\nexport type WithdrawalRequest = typeof withdrawalRequests.$inferSelect;\nexport type InsertWithdrawalRequest = z.infer<typeof insertWithdrawalRequestSchema>;\nexport type Content = typeof content.$inferSelect;\nexport type InsertContent = z.infer<typeof insertContentSchema>;\nexport type ContentPurchase = typeof contentPurchases.$inferSelect;\nexport type InsertContentPurchase = z.infer<typeof insertContentPurchaseSchema>;\nexport type ContentReview = typeof contentReviews.$inferSelect;\nexport type InsertContentReview = z.infer<typeof insertContentReviewSchema>;\nexport type ContentLike = typeof contentLikes.$inferSelect;\nexport type InsertContentLike = z.infer<typeof insertContentLikeSchema>;\nexport type ContentReply = typeof contentReplies.$inferSelect;\nexport type InsertContentReply = z.infer<typeof insertContentReplySchema>;\nexport type Broker = typeof brokers.$inferSelect;\nexport type InsertBroker = z.infer<typeof insertBrokerSchema>;\nexport type BrokerReview = typeof brokerReviews.$inferSelect;\nexport type InsertBrokerReview = z.infer<typeof insertBrokerReviewSchema>;\nexport type UserFollow = typeof userFollows.$inferSelect;\nexport type InsertUserFollow = z.infer<typeof insertUserFollowSchema>;\nexport type Conversation = typeof conversations.$inferSelect;\nexport type InsertConversation = z.infer<typeof insertConversationSchema>;\nexport type Message = typeof messages.$inferSelect;\nexport type InsertMessage = z.infer<typeof insertMessageSchema>;\nexport const insertMessageReactionSchema = createInsertSchema(messageReactions).omit({\n  id: true,\n  createdAt: true,\n});\nexport type InsertMessageReaction = z.infer<typeof insertMessageReactionSchema>;\nexport type MessageReaction = typeof messageReactions.$inferSelect;\nexport type Notification = typeof notifications.$inferSelect;\nexport type InsertNotification = z.infer<typeof insertNotificationSchema>;\nexport type UpdateUserProfile = z.infer<typeof updateUserProfileSchema>;\n\nexport const insertForumThreadSchema = createInsertSchema(forumThreads).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  views: true,\n  replyCount: true,\n  likeCount: true,\n  bookmarkCount: true,\n  shareCount: true,\n  lastActivityAt: true,\n  status: true,\n  lastScoreUpdate: true,\n  acceptedAnswerId: true,\n}).extend({\n  // Core fields with proper validation\n  title: z.string()\n    .min(15, \"Title must be at least 15 characters\")\n    .max(90, \"Title must not exceed 90 characters\")\n    .refine(\n      (val) => {\n        const upperCount = (val.match(/[A-Z]/g) || []).length;\n        const letterCount = (val.match(/[a-zA-Z]/g) || []).length;\n        return letterCount === 0 || upperCount / letterCount < 0.5;\n      },\n      { message: \"Let's tone this down a bit so more folks read it\" }\n    ),\n  body: z.string()\n    .min(150, \"A little more context helps people reply. Two more sentences?\")\n    .max(50000, \"Body is too long\"),\n  categorySlug: z.string().min(1),\n  subcategorySlug: z.string().optional(),\n  \n  // Thread type and language\n  threadType: z.enum([\"question\", \"discussion\", \"review\", \"journal\", \"guide\"]).default(\"discussion\"),\n  language: z.string().default(\"en\"),\n  \n  // Optional SEO fields\n  seoExcerpt: z.string()\n    .min(120, \"SEO excerpt should be at least 120 characters\")\n    .max(160, \"SEO excerpt should not exceed 160 characters\")\n    .optional(),\n  primaryKeyword: z.string()\n    .refine(\n      (val) => !val || (val.split(/\\s+/).length >= 1 && val.split(/\\s+/).length <= 6),\n      { message: \"Primary keyword should be 1-6 words\" }\n    )\n    .optional(),\n  \n  // Trading metadata (optional multi-select)\n  instruments: z.array(z.string()).optional().default([]),\n  timeframes: z.array(z.string()).optional().default([]),\n  strategies: z.array(z.string()).optional().default([]),\n  platform: z.string().optional(),\n  broker: z.string().max(40).optional(),\n  riskNote: z.string().max(500).optional(),\n  hashtags: z.array(z.string()).max(10, \"Maximum 10 hashtags\").optional().default([]),\n  \n  // Review-specific fields (conditional)\n  reviewTarget: z.string().optional(),\n  reviewVersion: z.string().optional(),\n  reviewRating: z.number().int().min(1).max(5).optional(),\n  reviewPros: z.array(z.string()).optional(),\n  reviewCons: z.array(z.string()).optional(),\n  \n  // Question-specific fields (conditional)\n  questionSummary: z.string().max(200).optional(),\n  \n  // Attachments\n  attachmentUrls: z.array(z.string()).optional().default([]),\n  \n  // Status flags\n  isPinned: z.boolean().optional().default(false),\n  isLocked: z.boolean().optional().default(false),\n  isSolved: z.boolean().optional().default(false),\n  \n  // Auto-generated SEO fields (optional, can be provided or generated)\n  slug: z.string().optional(),\n  focusKeyword: z.string().optional(),\n  metaDescription: z.string().optional(),\n  \n  // Ranking field (optional, defaults to 0 if not provided)\n  engagementScore: z.number().optional(),\n});\n\nexport const insertForumReplySchema = createInsertSchema(forumReplies).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  helpful: true,\n  isAccepted: true,\n  isVerified: true,\n  slug: true,\n  metaDescription: true,\n}).extend({\n  body: z.string().min(10).max(10000),\n});\n\nexport const insertForumCategorySchema = createInsertSchema(forumCategories).omit({\n  threadCount: true,\n  postCount: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  name: z.string().min(3).max(100),\n  description: z.string().min(10).max(500),\n});\n\nexport const insertUserBadgeSchema = createInsertSchema(userBadges).omit({\n  id: true,\n  awardedAt: true,\n});\n\nexport const insertActivityFeedSchema = createInsertSchema(activityFeed).omit({\n  id: true,\n  createdAt: true,\n}).extend({\n  title: z.string().min(1).max(300),\n  description: z.string().max(500).optional(),\n});\n\nexport type ForumThread = typeof forumThreads.$inferSelect;\nexport type InsertForumThread = z.infer<typeof insertForumThreadSchema>;\nexport type ForumReply = typeof forumReplies.$inferSelect;\nexport type InsertForumReply = z.infer<typeof insertForumReplySchema>;\nexport type ForumCategory = typeof forumCategories.$inferSelect;\nexport type InsertForumCategory = z.infer<typeof insertForumCategorySchema>;\nexport type UserBadge = typeof userBadges.$inferSelect;\nexport type InsertUserBadge = z.infer<typeof insertUserBadgeSchema>;\nexport type ActivityFeed = typeof activityFeed.$inferSelect;\nexport type InsertActivityFeed = z.infer<typeof insertActivityFeedSchema>;\n\n// Double-Entry Ledger schemas\nexport const insertUserWalletSchema = createInsertSchema(userWallet).omit({ walletId: true, updatedAt: true });\nexport type InsertUserWallet = z.infer<typeof insertUserWalletSchema>;\nexport type UserWallet = typeof userWallet.$inferSelect;\n\nexport const insertCoinLedgerTransactionSchema = createInsertSchema(coinLedgerTransactions)\n  .omit({ id: true, createdAt: true, closedAt: true });\nexport type InsertCoinLedgerTransaction = z.infer<typeof insertCoinLedgerTransactionSchema>;\nexport type CoinLedgerTransaction = typeof coinLedgerTransactions.$inferSelect;\n\nexport const insertCoinJournalEntrySchema = createInsertSchema(coinJournalEntries)\n  .omit({ id: true, createdAt: true });\nexport type InsertCoinJournalEntry = z.infer<typeof insertCoinJournalEntrySchema>;\nexport type CoinJournalEntry = typeof coinJournalEntries.$inferSelect;\n\nexport const insertLedgerReconciliationRunSchema = createInsertSchema(ledgerReconciliationRuns)\n  .omit({ id: true, createdAt: true, completedAt: true });\nexport type InsertLedgerReconciliationRun = z.infer<typeof insertLedgerReconciliationRunSchema>;\nexport type LedgerReconciliationRun = typeof ledgerReconciliationRuns.$inferSelect;\n\n// Dashboard Preferences schemas\nexport const insertDashboardPreferencesSchema = createInsertSchema(dashboardPreferences)\n  .omit({ id: true, createdAt: true, updatedAt: true });\nexport type InsertDashboardPreferences = z.infer<typeof insertDashboardPreferencesSchema>;\nexport type DashboardPreferences = typeof dashboardPreferences.$inferSelect;\n\n// Publish-specific validation schema with conditional evidence fields\nexport const publishContentSchema = insertContentSchema.superRefine((data, ctx) => {\n  // Check if \"Performance Report\" tag is included\n  const hasPerformanceReportTag = data.tags?.includes(\"Performance Report\");\n  \n  if (hasPerformanceReportTag) {\n    // Require evidence fields when Performance Report tag is present\n    if (!data.equityCurveImage) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Equity curve image is required for Performance Reports\",\n        path: [\"equityCurveImage\"],\n      });\n    }\n    if (!data.profitFactor) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Profit Factor is required for Performance Reports\",\n        path: [\"profitFactor\"],\n      });\n    }\n    if (!data.drawdownPercent) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Drawdown % is required for Performance Reports\",\n        path: [\"drawdownPercent\"],\n      });\n    }\n    if (!data.winPercent) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Win % is required for Performance Reports\",\n        path: [\"winPercent\"],\n      });\n    }\n    if (!data.broker) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Broker name is required for Performance Reports\",\n        path: [\"broker\"],\n      });\n    }\n    if (!data.monthsTested) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Months Tested is required for Performance Reports\",\n        path: [\"monthsTested\"],\n      });\n    }\n  }\n  \n  return data;\n});\n\nexport type PublishContent = z.infer<typeof publishContentSchema>;\n\n// Badge System Constants\nexport const BADGE_TYPES = {\n  VERIFIED_TRADER: 'verified_trader',\n  TOP_CONTRIBUTOR: 'top_contributor',\n  EA_MASTER: 'ea_master',\n  HELPFUL: 'helpful',\n  EARLY_ADOPTER: 'early_adopter',\n  BUG_HUNTER: 'bug_hunter',\n} as const;\n\nexport type BadgeType = typeof BADGE_TYPES[keyof typeof BADGE_TYPES];\n\nexport const BADGE_METADATA: Record<BadgeType, {\n  name: string;\n  description: string;\n  icon: string;\n  color: string;\n}> = {\n  [BADGE_TYPES.VERIFIED_TRADER]: {\n    name: 'Verified Trader',\n    description: 'Linked and verified trading account',\n    icon: 'ShieldCheck',\n    color: 'text-blue-500',\n  },\n  [BADGE_TYPES.TOP_CONTRIBUTOR]: {\n    name: 'Top Contributor',\n    description: 'Top 10 on contributor leaderboard',\n    icon: 'Star',\n    color: 'text-yellow-500',\n  },\n  [BADGE_TYPES.EA_MASTER]: {\n    name: 'EA Master',\n    description: 'Published 5+ Expert Advisors',\n    icon: 'Award',\n    color: 'text-purple-500',\n  },\n  [BADGE_TYPES.HELPFUL]: {\n    name: 'Helpful',\n    description: '50+ helpful replies',\n    icon: 'Heart',\n    color: 'text-red-500',\n  },\n  [BADGE_TYPES.EARLY_ADOPTER]: {\n    name: 'Early Adopter',\n    description: 'Joined in the first month',\n    icon: 'Zap',\n    color: 'text-orange-500',\n  },\n  [BADGE_TYPES.BUG_HUNTER]: {\n    name: 'Bug Hunter',\n    description: 'Reported verified bugs',\n    icon: 'Bug',\n    color: 'text-green-500',\n  },\n};\n\n// Daily Activity Limits types\nexport type DailyActivityLimit = typeof dailyActivityLimits.$inferSelect;\nexport type InsertDailyActivityLimit = typeof dailyActivityLimits.$inferInsert;\n\n// Referral types\nexport const insertReferralSchema = createInsertSchema(referrals).omit({ id: true, createdAt: true });\nexport type InsertReferral = z.infer<typeof insertReferralSchema>;\nexport type Referral = typeof referrals.$inferSelect;\n\n// Goals types\nexport const insertGoalSchema = createInsertSchema(goals).omit({ id: true, createdAt: true });\nexport type InsertGoal = z.infer<typeof insertGoalSchema>;\nexport type Goal = typeof goals.$inferSelect;\n\n// Achievements types\nexport type Achievement = typeof achievements.$inferSelect;\n\n// User Achievements types\nexport type UserAchievement = typeof userAchievements.$inferSelect;\n\n// Campaigns types\nexport type Campaign = typeof campaigns.$inferSelect;\n\n// Dashboard Settings types\nexport type DashboardSettings = typeof dashboardSettings.$inferSelect;\n\n// Profiles types\nexport type Profile = typeof profiles.$inferSelect;\n\n// User Settings types\nexport type UserSettings = typeof userSettings.$inferSelect;\n\n// ============================================================================\n// ADMIN DASHBOARD SCHEMAS AND TYPES (20 new admin tables)\n// ============================================================================\n\n// 1. Admin Actions\nexport const insertAdminActionSchema = createInsertSchema(adminActions).omit({ id: true, createdAt: true });\nexport type InsertAdminAction = z.infer<typeof insertAdminActionSchema>;\nexport type AdminAction = typeof adminActions.$inferSelect;\n\n// 2. Moderation Queue\nexport const insertModerationQueueSchema = createInsertSchema(moderationQueue).omit({ id: true, createdAt: true });\nexport type InsertModerationQueue = z.infer<typeof insertModerationQueueSchema>;\nexport type ModerationQueue = typeof moderationQueue.$inferSelect;\n\n// 3. Reported Content\nexport const insertReportedContentSchema = createInsertSchema(reportedContent).omit({ id: true, createdAt: true });\nexport type InsertReportedContent = z.infer<typeof insertReportedContentSchema>;\nexport type ReportedContent = typeof reportedContent.$inferSelect;\n\n// 4. System Settings\nexport const insertSystemSettingSchema = createInsertSchema(systemSettings).omit({ id: true, updatedAt: true });\nexport type InsertSystemSetting = z.infer<typeof insertSystemSettingSchema>;\nexport type SystemSetting = typeof systemSettings.$inferSelect;\n\n// 5. Support Tickets\nexport const insertSupportTicketSchema = createInsertSchema(supportTickets).omit({ id: true, createdAt: true, updatedAt: true });\nexport type InsertSupportTicket = z.infer<typeof insertSupportTicketSchema>;\nexport type SupportTicket = typeof supportTickets.$inferSelect;\n\n// 6. Announcements\nexport const insertAnnouncementSchema = createInsertSchema(announcements).omit({ id: true, createdAt: true, views: true, clicks: true });\nexport type InsertAnnouncement = z.infer<typeof insertAnnouncementSchema>;\nexport type Announcement = typeof announcements.$inferSelect;\n\n// 7. IP Bans\nexport const insertIpBanSchema = createInsertSchema(ipBans).omit({ id: true, bannedAt: true });\nexport type InsertIpBan = z.infer<typeof insertIpBanSchema>;\nexport type IpBan = typeof ipBans.$inferSelect;\n\n// 8. Email Templates\nexport const insertEmailTemplateSchema = createInsertSchema(emailTemplates).omit({ id: true, updatedAt: true });\nexport type InsertEmailTemplate = z.infer<typeof insertEmailTemplateSchema>;\nexport type EmailTemplate = typeof emailTemplates.$inferSelect;\n\n// 9. Admin Roles\nexport const insertAdminRoleSchema = createInsertSchema(adminRoles).omit({ id: true, grantedAt: true });\nexport type InsertAdminRole = z.infer<typeof insertAdminRoleSchema>;\nexport type AdminRole = typeof adminRoles.$inferSelect;\n\n// 10. User Segments\nexport const insertUserSegmentSchema = createInsertSchema(userSegments).omit({ id: true, createdAt: true, updatedAt: true, userCount: true });\nexport type InsertUserSegment = z.infer<typeof insertUserSegmentSchema>;\nexport type UserSegment = typeof userSegments.$inferSelect;\n\n// 11. Automation Rules\nexport const insertAutomationRuleSchema = createInsertSchema(automationRules).omit({ id: true, createdAt: true, executionCount: true, lastExecuted: true });\nexport type InsertAutomationRule = z.infer<typeof insertAutomationRuleSchema>;\nexport type AutomationRule = typeof automationRules.$inferSelect;\n\n// 12. A/B Tests\nexport const insertAbTestSchema = createInsertSchema(abTests).omit({ id: true, createdAt: true });\nexport type InsertAbTest = z.infer<typeof insertAbTestSchema>;\nexport type AbTest = typeof abTests.$inferSelect;\n\n// 13. Feature Flags\nexport const insertFeatureFlagSchema = createInsertSchema(featureFlags).omit({ id: true, createdAt: true, updatedAt: true });\nexport type InsertFeatureFlag = z.infer<typeof insertFeatureFlagSchema>;\nexport type FeatureFlag = typeof featureFlags.$inferSelect;\n\n// 14. API Keys\nexport const insertApiKeySchema = createInsertSchema(apiKeys).omit({ id: true, createdAt: true, lastUsed: true });\nexport type InsertApiKey = z.infer<typeof insertApiKeySchema>;\nexport type ApiKey = typeof apiKeys.$inferSelect;\n\n// 15. Webhooks\nexport const insertWebhookSchema = createInsertSchema(webhooks).omit({ id: true, createdAt: true, lastTriggered: true, successCount: true, failureCount: true });\nexport type InsertWebhook = z.infer<typeof insertWebhookSchema>;\nexport type Webhook = typeof webhooks.$inferSelect;\n\n// 16. Scheduled Jobs\nexport const insertScheduledJobSchema = createInsertSchema(scheduledJobs).omit({ id: true, lastRun: true, nextRun: true, lastStatus: true, lastError: true, executionCount: true });\nexport type InsertScheduledJob = z.infer<typeof insertScheduledJobSchema>;\nexport type ScheduledJob = typeof scheduledJobs.$inferSelect;\n\n// 17. Performance Metrics\nexport const insertPerformanceMetricSchema = createInsertSchema(performanceMetrics).omit({ id: true, recordedAt: true });\nexport type InsertPerformanceMetric = z.infer<typeof insertPerformanceMetricSchema>;\nexport type PerformanceMetric = typeof performanceMetrics.$inferSelect;\n\n// 18. Security Events\nexport const insertSecurityEventSchema = createInsertSchema(securityEvents).omit({ id: true, createdAt: true });\nexport type InsertSecurityEvent = z.infer<typeof insertSecurityEventSchema>;\nexport type SecurityEvent = typeof securityEvents.$inferSelect;\n\n// 19. Media Library\nexport const insertMediaLibrarySchema = createInsertSchema(mediaLibrary).omit({ id: true, uploadedAt: true, usageCount: true });\nexport type InsertMediaLibrary = z.infer<typeof insertMediaLibrarySchema>;\nexport type MediaLibrary = typeof mediaLibrary.$inferSelect;\n\n// 20. Content Revisions\nexport const insertContentRevisionSchema = createInsertSchema(contentRevisions).omit({ id: true, createdAt: true });\nexport type InsertContentRevision = z.infer<typeof insertContentRevisionSchema>;\nexport type ContentRevision = typeof contentRevisions.$inferSelect;\n\n// User Activity types (Daily Earning system)\nexport const insertUserActivitySchema = createInsertSchema(userActivity).omit({ id: true, createdAt: true });\nexport type InsertUserActivity = z.infer<typeof insertUserActivitySchema>;\nexport type UserActivity = typeof userActivity.$inferSelect;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1875, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/shared/relations.ts"],"sourcesContent":["// Drizzle Relations for Relational Query API\n// This file defines relationships between tables for use with db.query API\n\nimport { relations } from 'drizzle-orm';\nimport {\n  users,\n  forumThreads,\n  forumReplies,\n  content,\n  contentReviews,\n  brokers,\n  brokerReviews,\n  contentPurchases,\n} from './schema';\n\n// Users Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  threads: many(forumThreads),\n  replies: many(forumReplies),\n  content: many(content),\n  reviews: many(contentReviews),\n  brokerReviews: many(brokerReviews),\n  purchases: many(contentPurchases, { relationName: 'buyer' }),\n  sales: many(contentPurchases, { relationName: 'seller' }),\n}));\n\n// Forum Threads Relations\nexport const forumThreadsRelations = relations(forumThreads, ({ one, many }) => ({\n  author: one(users, {\n    fields: [forumThreads.authorId],\n    references: [users.id],\n  }),\n  replies: many(forumReplies),\n}));\n\n// Forum Replies Relations\nexport const forumRepliesRelations = relations(forumReplies, ({ one }) => ({\n  thread: one(forumThreads, {\n    fields: [forumReplies.threadId],\n    references: [forumThreads.id],\n  }),\n  author: one(users, {\n    fields: [forumReplies.userId],\n    references: [users.id],\n  }),\n}));\n\n// Content Relations\nexport const contentRelations = relations(content, ({ one, many }) => ({\n  author: one(users, {\n    fields: [content.authorId],\n    references: [users.id],\n  }),\n  reviews: many(contentReviews),\n  purchases: many(contentPurchases),\n}));\n\n// Content Reviews Relations\nexport const contentReviewsRelations = relations(contentReviews, ({ one }) => ({\n  content: one(content, {\n    fields: [contentReviews.contentId],\n    references: [content.id],\n  }),\n  author: one(users, {\n    fields: [contentReviews.userId],\n    references: [users.id],\n  }),\n}));\n\n// Broker Relations\nexport const brokersRelations = relations(brokers, ({ many }) => ({\n  reviews: many(brokerReviews),\n}));\n\n// Broker Reviews Relations\nexport const brokerReviewsRelations = relations(brokerReviews, ({ one }) => ({\n  broker: one(brokers, {\n    fields: [brokerReviews.brokerId],\n    references: [brokers.id],\n  }),\n  author: one(users, {\n    fields: [brokerReviews.userId],\n    references: [users.id],\n  }),\n}));\n\n// Content Purchases Relations\nexport const contentPurchasesRelations = relations(contentPurchases, ({ one }) => ({\n  content: one(content, {\n    fields: [contentPurchases.contentId],\n    references: [content.id],\n  }),\n  buyer: one(users, {\n    fields: [contentPurchases.buyerId],\n    references: [users.id],\n    relationName: 'buyer',\n  }),\n  seller: one(users, {\n    fields: [contentPurchases.sellerId],\n    references: [users.id],\n    relationName: 'seller',\n  }),\n}));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2024, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/db.ts"],"sourcesContent":["import { drizzle } from 'drizzle-orm/neon-serverless';\nimport { Pool } from '@neondatabase/serverless';\nimport * as schema from '../shared/schema';\nimport * as relations from '../shared/relations';\n\nif (!process.env.DATABASE_URL) {\n  throw new Error('DATABASE_URL environment variable is not set');\n}\n\n// Create connection pool\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n});\n\n// Create Drizzle instance with schema and relations\nexport const db = drizzle(pool, { schema: { ...schema, ...relations } });\n\n// Helper function to get global stats (for homepage)\nexport async function getGlobalStats() {\n  const { count } = await import('drizzle-orm');\n  const { forumThreads, users, forumReplies, content } = schema;\n\n  const [threadCount, userCount, replyCount, contentCount] = await Promise.all([\n    db.select({ count: count() }).from(forumThreads),\n    db.select({ count: count() }).from(users),\n    db.select({ count: count() }).from(forumReplies),\n    db.select({ count: count() }).from(content),\n  ]);\n\n  return {\n    totalThreads: threadCount[0].count,\n    totalMembers: userCount[0].count,\n    totalPosts: replyCount[0].count,\n    totalContent: contentCount[0].count,\n    weeklyActivity: 0, // TODO: Calculate from database\n  };\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,YAAY,EAAE;IAC7B,MAAM,IAAI,MAAM;AAClB;AAEA,yBAAyB;AACzB,MAAM,OAAO,IAAI,gKAAI,CAAC;IACpB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;AAC5C;AAGO,MAAM,KAAK,IAAA,2KAAO,EAAC,MAAM;IAAE,QAAQ;QAAE,GAAG,kHAAM;QAAE,GAAG,qHAAS;IAAC;AAAE;AAG/D,eAAe;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG;IAClB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG;IAEvD,MAAM,CAAC,aAAa,WAAW,YAAY,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC3E,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;QACnC,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;QACnC,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;QACnC,GAAG,MAAM,CAAC;YAAE,OAAO;QAAQ,GAAG,IAAI,CAAC;KACpC;IAED,OAAO;QACL,cAAc,WAAW,CAAC,EAAE,CAAC,KAAK;QAClC,cAAc,SAAS,CAAC,EAAE,CAAC,KAAK;QAChC,YAAY,UAAU,CAAC,EAAE,CAAC,KAAK;QAC/B,cAAc,YAAY,CAAC,EAAE,CAAC,KAAK;QACnC,gBAAgB;IAClB;AACF","debugId":null}},
    {"offset": {"line": 2080, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/sitemap.ts"],"sourcesContent":["import type { MetadataRoute } from 'next';\nimport { db } from '../lib/db';\nimport { forumThreads, content, users, forumCategories } from '../shared/schema';\nimport { desc } from 'drizzle-orm';\nimport type { ForumThread, Content, User, ForumCategory } from '../shared/schema';\n\nexport default async function sitemap(): Promise<MetadataRoute.Sitemap> {\n  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'https://yoforex.net';\n\n  // Fetch all threads\n  const threads = await db.query.forumThreads.findMany({\n    orderBy: [desc(forumThreads.updatedAt)],\n    limit: 1000,\n  });\n\n  // Fetch all content\n  const contentItems = await db.query.content.findMany({\n    orderBy: [desc(content.updatedAt)],\n    limit: 1000,\n  });\n\n  // Fetch all users\n  const userProfiles = await db.query.users.findMany({\n    orderBy: [desc(users.reputationScore)],\n    limit: 500,\n  });\n\n  // Fetch all categories\n  const categories = await db.query.forumCategories.findMany();\n\n  return [\n    // Homepage\n    {\n      url: baseUrl,\n      lastModified: new Date(),\n      changeFrequency: 'daily',\n      priority: 1.0,\n    },\n    // Forum threads\n    ...threads.map((thread: ForumThread) => ({\n      url: `${baseUrl}/thread/${thread.slug}`,\n      lastModified: thread.updatedAt ? new Date(thread.updatedAt) : new Date(),\n      changeFrequency: 'weekly' as const,\n      priority: 0.8,\n    })),\n    // Marketplace content\n    ...contentItems.map((item: Content) => ({\n      url: `${baseUrl}/content/${item.slug}`,\n      lastModified: item.updatedAt ? new Date(item.updatedAt) : new Date(),\n      changeFrequency: 'weekly' as const,\n      priority: 0.9,\n    })),\n    // User profiles\n    ...userProfiles.map((user: User) => ({\n      url: `${baseUrl}/user/${user.username}`,\n      lastModified: user.updatedAt ? new Date(user.updatedAt) : new Date(),\n      changeFrequency: 'monthly' as const,\n      priority: 0.6,\n    })),\n    // Categories\n    ...categories.map((category: ForumCategory) => ({\n      url: `${baseUrl}/category/${category.slug}`,\n      lastModified: new Date(),\n      changeFrequency: 'daily' as const,\n      priority: 0.7,\n    })),\n    // Static pages\n    {\n      url: `${baseUrl}/marketplace`,\n      lastModified: new Date(),\n      changeFrequency: 'daily',\n      priority: 0.9,\n    },\n    {\n      url: `${baseUrl}/categories`,\n      lastModified: new Date(),\n      changeFrequency: 'daily',\n      priority: 0.8,\n    },\n    {\n      url: `${baseUrl}/discussions`,\n      lastModified: new Date(),\n      changeFrequency: 'daily',\n      priority: 0.7,\n    },\n    {\n      url: `${baseUrl}/brokers`,\n      lastModified: new Date(),\n      changeFrequency: 'weekly',\n      priority: 0.7,\n    },\n  ];\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;AAGe,eAAe;IAC5B,MAAM,UAAU,2DAAoC;IAEpD,oBAAoB;IACpB,MAAM,UAAU,MAAM,iHAAE,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC;QACnD,SAAS;YAAC,IAAA,wKAAI,EAAC,kIAAY,CAAC,SAAS;SAAE;QACvC,OAAO;IACT;IAEA,oBAAoB;IACpB,MAAM,eAAe,MAAM,iHAAE,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;QACnD,SAAS;YAAC,IAAA,wKAAI,EAAC,6HAAO,CAAC,SAAS;SAAE;QAClC,OAAO;IACT;IAEA,kBAAkB;IAClB,MAAM,eAAe,MAAM,iHAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;QACjD,SAAS;YAAC,IAAA,wKAAI,EAAC,2HAAK,CAAC,eAAe;SAAE;QACtC,OAAO;IACT;IAEA,uBAAuB;IACvB,MAAM,aAAa,MAAM,iHAAE,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ;IAE1D,OAAO;QACL,WAAW;QACX;YACE,KAAK;YACL,cAAc,IAAI;YAClB,iBAAiB;YACjB,UAAU;QACZ;QACA,gBAAgB;WACb,QAAQ,GAAG,CAAC,CAAC,SAAwB,CAAC;gBACvC,KAAK,GAAG,QAAQ,QAAQ,EAAE,OAAO,IAAI,EAAE;gBACvC,cAAc,OAAO,SAAS,GAAG,IAAI,KAAK,OAAO,SAAS,IAAI,IAAI;gBAClE,iBAAiB;gBACjB,UAAU;YACZ,CAAC;QACD,sBAAsB;WACnB,aAAa,GAAG,CAAC,CAAC,OAAkB,CAAC;gBACtC,KAAK,GAAG,QAAQ,SAAS,EAAE,KAAK,IAAI,EAAE;gBACtC,cAAc,KAAK,SAAS,GAAG,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI;gBAC9D,iBAAiB;gBACjB,UAAU;YACZ,CAAC;QACD,gBAAgB;WACb,aAAa,GAAG,CAAC,CAAC,OAAe,CAAC;gBACnC,KAAK,GAAG,QAAQ,MAAM,EAAE,KAAK,QAAQ,EAAE;gBACvC,cAAc,KAAK,SAAS,GAAG,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI;gBAC9D,iBAAiB;gBACjB,UAAU;YACZ,CAAC;QACD,aAAa;WACV,WAAW,GAAG,CAAC,CAAC,WAA4B,CAAC;gBAC9C,KAAK,GAAG,QAAQ,UAAU,EAAE,SAAS,IAAI,EAAE;gBAC3C,cAAc,IAAI;gBAClB,iBAAiB;gBACjB,UAAU;YACZ,CAAC;QACD,eAAe;QACf;YACE,KAAK,GAAG,QAAQ,YAAY,CAAC;YAC7B,cAAc,IAAI;YAClB,iBAAiB;YACjB,UAAU;QACZ;QACA;YACE,KAAK,GAAG,QAAQ,WAAW,CAAC;YAC5B,cAAc,IAAI;YAClB,iBAAiB;YACjB,UAAU;QACZ;QACA;YACE,KAAK,GAAG,QAAQ,YAAY,CAAC;YAC7B,cAAc,IAAI;YAClB,iBAAiB;YACjB,UAAU;QACZ;QACA;YACE,KAAK,GAAG,QAAQ,QAAQ,CAAC;YACzB,cAAc,IAAI;YAClB,iBAAiB;YACjB,UAAU;QACZ;KACD;AACH","debugId":null}},
    {"offset": {"line": 2182, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/sitemap--route-entry.js"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { default as handler } from \"./sitemap.ts\"\nimport { resolveRouteData } from 'next/dist/build/webpack/loaders/metadata/resolve-route-data'\n\nconst contentType = \"application/xml\"\nconst cacheControl = \"public, max-age=0, must-revalidate\"\nconst fileType = \"sitemap\"\n\nif (typeof handler !== 'function') {\n    throw new Error('Default export is missing in \"./sitemap.ts\"')\n}\n\nexport async function GET() {\n    const data = await handler()\n    const content = resolveRouteData(data, fileType)\n\n    return new NextResponse(content, {\n        headers: {\n            'Content-Type': contentType,\n            'Cache-Control': cacheControl,\n        },\n    })\n}\n\nexport * from \"./sitemap.ts\"\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,cAAc;AACpB,MAAM,eAAe;AACrB,MAAM,WAAW;AAEjB,IAAI,OAAO,2HAAO,KAAK,YAAY;IAC/B,MAAM,IAAI,MAAM;AACpB;AAEO,eAAe;IAClB,MAAM,OAAO,MAAM,IAAA,2HAAO;IAC1B,MAAM,UAAU,IAAA,yNAAgB,EAAC,MAAM;IAEvC,OAAO,IAAI,gJAAY,CAAC,SAAS;QAC7B,SAAS;YACL,gBAAgB;YAChB,iBAAiB;QACrB;IACJ;AACJ","debugId":null}}]
}